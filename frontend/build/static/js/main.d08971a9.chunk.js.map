{"version":3,"sources":["constants/productConstant.js","constants/userConstants.js","constants/cartConstant.js","constants/orderConstants.js","store.js","reducers/productReducer.js","reducers/cartReducer.js","reducers/userReducers.js","reducers/orderReducers.js","components/Footer.jsx","actions/productActions.js","components/Rating.jsx","screens/ProductScreen.jsx","components/shared/Loader.jsx","screens/HomeScreen.jsx","actions/userAction.js","components/Header.jsx","actions/cartAction.js","screens/ProductDetails.jsx","components/shared/Message.jsx","screens/CartScreen.jsx","components/shared/FormContainer.jsx","screens/LoginScreen.jsx","actions/orderActions.js","screens/RegisterScreen.jsx","screens/ProfileScreen.jsx","components/shared/CheckoutStep.jsx","screens/ShippingScreen.jsx","screens/PaymentScreen.jsx","screens/PlaceOrderScreen.jsx","screens/OrderPayScreen.jsx","screens/ShowOrders.jsx","admin_screens/layout/Sidebar.jsx","admin_screens/layout/AdminContainer.jsx","admin_screens/Dashboard.jsx","admin_screens/ProductList.jsx","admin_screens/NewProduct.jsx","admin_screens/UpdateProduct.jsx","admin_screens/UsersList.jsx","admin_screens/ProductReviews.jsx","admin_screens/OrderList.jsx","admin_screens/ProcessOrder.jsx","admin_screens/UpdateUser.jsx","components/shared/ProtectedRoute.jsx","screens/UpdateProfile.jsx","screens/Success.jsx","screens/OrderDetailsScreen.jsx","components/About.jsx","components/Contact.jsx","components/NotFound.jsx","App.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAILS","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAILS","ADMIN_PRODUCT_REQUEST","ADMIN_PRODUCT_SUCCESS","ADMIN_PRODUCT_FAIL","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_RESET","NEW_PRODUCT_FAIL","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_RESET","UPDATE_PRODUCT_FAIL","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_RESET","DELETE_PRODUCT_FAIL","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_RESET","NEW_REVIEW_FAIL","ALL_REVIEW_REQUEST","ALL_REVIEW_SUCCESS","ALL_REVIEW_FAIL","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_RESET","DELETE_REVIEW_FAIL","CLEAR_ERRORS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT_SUCCESS","USER_LOGOUT_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","ALL_USERS_REQUEST","ALL_USERS_SUCCESS","ALL_USERS_FAIL","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_RESET","UPDATE_USER_FAIL","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","DELETE_USER_FAIL","DELETE_USER_RESET","SINGLE_USER_REQUEST","SINGLE_USER_SUCCESS","SINGLE_USER_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","LIST_MY_ORDERS_REQUEST","LIST_MY_ORDERS_SUCCESS","LIST_MY_ORDERS_FAIL","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_RESET","DELETE_ORDER_FAIL","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_RESET","UPDATE_ORDER_FAIL","paymentMethodFromStorage","localStorage","getItem","JSON","parse","shippingAddressFromStorage","cartItemsFromStorage","reducer","combineReducers","productList","state","products","action","type","loading","payload","productsCount","filteredProductsCount","error","productDetails","product","reviews","newProduct","success","isDeleted","message","isUpdated","cart","cartItems","item","existingItem","find","p","map","x","filter","shippingAddress","paymentMethod","user","isAuthenticated","singleUser","userUpdateProfile","listUser","users","orderCreate","order","orderDetails","listMyOrders","orders","allOrders","newReview","productReviews","review","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Footer","Container","fluid","Row","className","Col","listProducts","searchQuery","price","selectedCategory","page","rating","pageSize","dispatch","a","link","axios","get","data","response","listProductDetails","id","getAllProducts","getAllReviews","params","clearErrors","Rating","value","text","style","color","ProductScreen","Card","Header","to","_id","Img","variant","src","image","Body","Title","as","name","Text","numReviews","Loader","Spinner","animation","role","width","height","margin","display","categories","HomeScreen","location","useDispatch","useSelector","alert","useAlert","useState","setPrice","setSelectedCategory","setPage","ratings","setRatings","search","split","useEffect","md","ListGroup","Item","Button","onClick","Number","Group","Control","onChange","e","target","cate","Math","ceil","ButtonGroup","size","disabled","lastP","lg","span","offset","sm","xs","getUserDetails","getAllUsers","setSearch","history","useHistory","Navbar","bg","expand","sticky","collapseOnSelect","component","Brand","Toggle","aria-controls","Collapse","inline","onSubmit","preventDefault","trim","push","FormControl","placeholder","Nav","Link","NavDropdown","title","addToCart","qty","getState","countInStock","setItem","stringify","ProductDetails","match","setQty","show","setShow","setRating","comment","setComment","commentFocus","useRef","productId","successReview","reviewError","submitReviewToggle","Image","alt","description","Array","keys","ListGroupItem","Modal","onHide","closeButton","cursor","fontSize","rows","cols","ref","current","focus","reviewData","config","headers","put","rev","star","Message","children","Alert","CartScreen","RemoveFromCartHandler","RemoveFromCart","length","rounded","reduce","acc","t","toFixed","formContainer","LoginScreen","email","setEmail","password","setPassword","redirect","FormContainer","post","login","controlId","getOrderDetails","getAllOrders","RegisterScreen","setName","setImail","confirmPassword","setConfirmPassword","avatar","setAvatar","avatarPreview","setAvatarPreview","passwordElement","confirmPasswordElement","inputs","document","querySelectorAll","forEach","input","classList","remove","userData","add","accept","reader","FileReader","onload","readyState","result","onerror","err","console","readAsDataURL","files","block","ProfileScreen","url","createdAt","substring","CheckoutStep","step1","step2","step3","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","mobileNo","setMobileNo","required","PaymentScreen","setPaymentMethod","Label","Check","checked","label","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","totalPrice","round","orderItems","sessionStorage","OrderPayScreen","apiClientId","setApiClientId","orderCreateError","clientId","script","createElement","async","body","appendChild","addPaypalScript","amount","onSuccess","log","paymentResult","status","update_time","email_address","payer","paidAt","create_time","createOrder","removeItem","ShowOrders","Table","striped","bordered","hover","responsive","orderStatus","deliveredAt","colSpan","Sidebar","AdminContainer","Dashboard","outOfStock","totalAmount","ProductList","deleteError","deleteProductHandler","delete","deleteProduct","aria-hidden","border","NewProduct","setDescription","category","setCategory","setcountInStock","setImage","brand","setBrand","productData","UpdateProduct","updateError","setCountInStock","UsersList","deleteUserHandler","deleteUser","ProductReviews","setProductId","deleteReviewHandler","reviewId","deleteReviews","OrderList","deleteOrderHandler","deleteOrder","ProcessOrder","setStatus","isDelivered","setIsDelivered","orderId","isPaid","updateOrder","UpdateUser","updateLoading","setRole","userId","AdminRoute","Component","rest","render","props","ProtectedRoute","UpdateProfile","Success","OrderDetailsScreen","About","Contact","setMessage","href","rel","NotFound","App","exact","path","options","position","positions","BOTTOM_CENTER","timeout","transition","transitions","SCALE","ReactDOM","template","AlertTemplate","getElementById"],"mappings":"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","file":"static/js/main.d08971a9.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\r\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\r\nexport const PRODUCT_LIST_FAILS = \"PRODUCT_LIST_FAILS\";\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\r\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\r\nexport const PRODUCT_DETAILS_FAILS = \"PRODUCT_DETAILS_FAILS\";\r\n\r\nexport const ADMIN_PRODUCT_REQUEST = \"ADMIN_PRODUCT_REQUEST\";\r\nexport const ADMIN_PRODUCT_SUCCESS = \"ADMIN_PRODUCT_SUCCESS\";\r\nexport const ADMIN_PRODUCT_FAIL = \"ADMIN_PRODUCT_FAIL\";\r\n\r\nexport const NEW_PRODUCT_REQUEST = \"NEW_PRODUCT_REQUEST\";\r\nexport const NEW_PRODUCT_SUCCESS = \"NEW_PRODUCT_SUCCESS\";\r\nexport const NEW_PRODUCT_RESET = \"NEW_PRODUCT_RESET\";\r\nexport const NEW_PRODUCT_FAIL = \"NEW_PRODUCT_FAIL\";\r\n\r\nexport const UPDATE_PRODUCT_REQUEST = \"UPDATE_PRODUCT_REQUEST\";\r\nexport const UPDATE_PRODUCT_SUCCESS = \"UPDATE_PRODUCT_SUCCESS\";\r\nexport const UPDATE_PRODUCT_RESET = \"UPDATE_PRODUCT_RESET\";\r\nexport const UPDATE_PRODUCT_FAIL = \"UPDATE_PRODUCT_FAIL\";\r\n\r\nexport const DELETE_PRODUCT_REQUEST = \"DELETE_PRODUCT_REQUEST\";\r\nexport const DELETE_PRODUCT_SUCCESS = \"DELETE_PRODUCT_SUCCESS\";\r\nexport const DELETE_PRODUCT_RESET = \"DELETE_PRODUCT_RESET\";\r\nexport const DELETE_PRODUCT_FAIL = \"DELETE_PRODUCT_FAIL\";\r\n\r\nexport const NEW_REVIEW_REQUEST = \"NEW_REVIEW_REQUEST\";\r\nexport const NEW_REVIEW_SUCCESS = \"NEW_REVIEW_SUCCESS\";\r\nexport const NEW_REVIEW_RESET = \"NEW_REVIEW_RESET\";\r\nexport const NEW_REVIEW_FAIL = \"NEW_REVIEW_FAIL\";\r\n\r\nexport const ALL_REVIEW_REQUEST = \"ALL_REVIEW_REQUEST\";\r\nexport const ALL_REVIEW_SUCCESS = \"ALL_REVIEW_SUCCESS\";\r\nexport const ALL_REVIEW_FAIL = \"ALL_REVIEW_FAIL\";\r\n\r\nexport const DELETE_REVIEW_REQUEST = \"DELETE_REVIEW_REQUEST\";\r\nexport const DELETE_REVIEW_SUCCESS = \"DELETE_REVIEW_SUCCESS\";\r\nexport const DELETE_REVIEW_RESET = \"DELETE_REVIEW_RESET\";\r\nexport const DELETE_REVIEW_FAIL = \"DELETE_REVIEW_FAIL\";\r\n\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\nexport const USER_LOGOUT_SUCCESS = \"USER_LOGOUT_SUCCESS\";\r\nexport const USER_LOGOUT_FAIL = \"USER_LOGOUT_FAIL\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\nexport const USER_REGISTER_RESET = \"USER_REGISTER_RESET\";\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\r\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\";\r\nexport const CLOSE_NOTIFICATION = \"CLOSE_NOTIFICATION\";\r\n\r\nexport const ALL_USERS_REQUEST = \"ALL_USERS_REQUEST\";\r\nexport const ALL_USERS_SUCCESS = \"ALL_USERS_SUCCESS\";\r\nexport const ALL_USERS_FAIL = \"ALL_USERS_FAIL\";\r\n\r\nexport const UPDATE_USER_REQUEST = \"UPDATE_USER_REQUEST\";\r\nexport const UPDATE_USER_SUCCESS = \"UPDATE_USER_SUCCESS\";\r\nexport const UPDATE_USER_RESET = \"UPDATE_USER_RESET\";\r\nexport const UPDATE_USER_FAIL = \"UPDATE_USER_FAIL\";\r\n\r\nexport const DELETE_USER_REQUEST = \"DELETE_USER_REQUEST\";\r\nexport const DELETE_USER_SUCCESS = \"DELETE_USER_SUCCESS\";\r\nexport const DELETE_USER_FAIL = \"DELETE_USER_FAIL\";\r\nexport const DELETE_USER_RESET = \"DELETE_USER_RESET\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n\r\nexport const SINGLE_USER_REQUEST = \"SINGLE_USER_REQUEST\";\r\nexport const SINGLE_USER_SUCCESS = \"SINGLE_USER_SUCCESS\";\r\nexport const SINGLE_USER_FAIL = \"SINGLE_USER_FAIL\";\r\n","export const CART_ADD_ITEM = \"CART_ADD_ITEM\";\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\r\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\r\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\r\n","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\r\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\r\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\r\nexport const ORDER_CREATE_RESET = \"ORDER_CREATE_RESET\";\r\n\r\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\";\r\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\";\r\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\";\r\nexport const ORDER_DETAILS_RESET = \"ORDER_DETAILS_RESET\";\r\n\r\nexport const LIST_MY_ORDERS_REQUEST = \"LIST_MY_ORDERS_REQUEST\";\r\nexport const LIST_MY_ORDERS_SUCCESS = \"LIST_MY_ORDERS_SUCCESS\";\r\nexport const LIST_MY_ORDERS_FAIL = \"LIST_MY_ORDERS_FAIL\";\r\n\r\nexport const ALL_ORDERS_REQUEST = \"ALL_ORDERS_REQUEST\";\r\nexport const ALL_ORDERS_SUCCESS = \"ALL_ORDERS_SUCCESS\";\r\nexport const ALL_ORDERS_FAIL = \"ALL_ORDERS_FAIL\";\r\n\r\nexport const DELETE_ORDER_REQUEST = \"DELETE_ORDER_REQUEST\";\r\nexport const DELETE_ORDER_SUCCESS = \"DELETE_ORDER_SUCCESS\";\r\nexport const DELETE_ORDER_RESET = \"DELETE_ORDER_RESET\";\r\nexport const DELETE_ORDER_FAIL = \"DELETE_ORDER_FAIL\";\r\n\r\nexport const UPDATE_ORDER_REQUEST = \"UPDATE_ORDER_REQUEST\";\r\nexport const UPDATE_ORDER_SUCCESS = \"UPDATE_ORDER_SUCCESS\";\r\nexport const UPDATE_ORDER_RESET = \"UPDATE_ORDER_RESET\";\r\nexport const UPDATE_ORDER_FAIL = \"UPDATE_ORDER_FAIL\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  productListReducer,\n  productDetailsReducer,\n  newProductReducer,\n  productReducer,\n  productReviewsReducer,\n  reviewReducer,\n  newReviewReducer,\n} from \"./reducers/productReducer\";\nimport {\n  userReducer,\n  userUpdateProfileReducer,\n  allUserReducer,\n  getSingleUserReducer,\n} from \"./reducers/userReducers\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  myOrders,\n  allOrdersReducer,\n  orderReducer,\n} from \"./reducers/orderReducers\";\n\nconst paymentMethodFromStorage = localStorage.getItem(\"paymentMethod\")\n  ? JSON.parse(localStorage.getItem(\"paymentMethod\"))\n  : \"\";\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\n\n// const userInfoFromStorage = localStorage.getItem(\"userInfo\")\n//   ? JSON.parse(localStorage.getItem(\"userInfo\"))\n//   : null;\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  newProduct: newProductReducer,\n  product: productReducer,\n  cart: cartReducer,\n  user: userReducer,\n  singleUser: getSingleUserReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  listUser: allUserReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  listMyOrders: myOrders,\n  allOrders: allOrdersReducer,\n  order: orderReducer,\n  newReview: newReviewReducer,\n  productReviews: productReviewsReducer,\n  review: reviewReducer,\n});\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n    paymentMethod: paymentMethodFromStorage,\n  },\n  // user: { userInfo: userInfoFromStorage },\n};\n// const initialState = {};\nconst middleware = [thunk];\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAILS,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAILS,\r\n  ADMIN_PRODUCT_REQUEST,\r\n  ADMIN_PRODUCT_SUCCESS,\r\n  ADMIN_PRODUCT_FAIL,\r\n  NEW_PRODUCT_REQUEST,\r\n  NEW_PRODUCT_SUCCESS,\r\n  NEW_PRODUCT_FAIL,\r\n  NEW_PRODUCT_RESET,\r\n  DELETE_PRODUCT_REQUEST,\r\n  UPDATE_PRODUCT_REQUEST,\r\n  DELETE_PRODUCT_SUCCESS,\r\n  UPDATE_PRODUCT_SUCCESS,\r\n  DELETE_PRODUCT_FAIL,\r\n  UPDATE_PRODUCT_FAIL,\r\n  DELETE_PRODUCT_RESET,\r\n  UPDATE_PRODUCT_RESET,\r\n  NEW_REVIEW_REQUEST,\r\n  NEW_REVIEW_SUCCESS,\r\n  NEW_REVIEW_FAIL,\r\n  NEW_REVIEW_RESET,\r\n  ALL_REVIEW_REQUEST,\r\n  ALL_REVIEW_SUCCESS,\r\n  ALL_REVIEW_FAIL,\r\n  DELETE_REVIEW_REQUEST,\r\n  DELETE_REVIEW_SUCCESS,\r\n  DELETE_REVIEW_FAIL,\r\n  DELETE_REVIEW_RESET,\r\n  CLEAR_ERRORS,\r\n} from \"../constants/productConstant\";\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n    case ADMIN_PRODUCT_REQUEST:\r\n      return { loading: true, products: [] };\r\n    case PRODUCT_LIST_SUCCESS:\r\n    case ADMIN_PRODUCT_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        productsCount: action.payload.productsCount,\r\n        filteredProductsCount: action.payload.filteredProductsCount,\r\n      };\r\n    case PRODUCT_LIST_FAILS:\r\n    case ADMIN_PRODUCT_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const newProductReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case NEW_PRODUCT_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case NEW_PRODUCT_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        product: action.payload,\r\n      };\r\n    case NEW_PRODUCT_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case NEW_PRODUCT_RESET:\r\n      return {\r\n        ...state,\r\n        success: false,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const productReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case DELETE_PRODUCT_REQUEST:\r\n    case UPDATE_PRODUCT_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case DELETE_PRODUCT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isDeleted: action.payload.success,\r\n        message: action.payload.message,\r\n      };\r\n\r\n    case UPDATE_PRODUCT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isUpdated: true,\r\n        product: action.payload,\r\n      };\r\n    case DELETE_PRODUCT_FAIL:\r\n    case UPDATE_PRODUCT_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case DELETE_PRODUCT_RESET:\r\n      return {\r\n        ...state,\r\n        isDeleted: false,\r\n      };\r\n    case UPDATE_PRODUCT_RESET:\r\n      return {\r\n        ...state,\r\n        isUpdated: false,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true, ...state };\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload };\r\n    case PRODUCT_DETAILS_FAILS:\r\n      return { loading: false, error: action.payload };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const newReviewReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case NEW_REVIEW_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case NEW_REVIEW_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: action.payload,\r\n      };\r\n    case NEW_REVIEW_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case NEW_REVIEW_RESET:\r\n      return {\r\n        ...state,\r\n        success: false,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productReviewsReducer = (state = { reviews: [] }, action) => {\r\n  switch (action.type) {\r\n    case ALL_REVIEW_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case ALL_REVIEW_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        reviews: action.payload.reviews,\r\n      };\r\n    case ALL_REVIEW_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const reviewReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case DELETE_REVIEW_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case DELETE_REVIEW_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isDeleted: action.payload.success,\r\n        message: action.payload.message,\r\n      };\r\n    case DELETE_REVIEW_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case DELETE_REVIEW_RESET:\r\n      return {\r\n        ...state,\r\n        isDeleted: false,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n} from \"../constants/cartConstant\";\r\n\r\nexport const cartReducer = (state = { cartItems: [] }, action) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n      const existingItem = state.cartItems.find(\r\n        (p) => p.product === item.product\r\n      );\r\n      if (existingItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existingItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((p) => p.product !== action.payload),\r\n      };\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return { ...state, shippingAddress: action.payload };\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return { ...state, paymentMethod: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  ALL_USERS_REQUEST,\r\n  ALL_USERS_SUCCESS,\r\n  ALL_USERS_FAIL,\r\n  DELETE_USER_FAIL,\r\n  UPDATE_USER_FAIL,\r\n  DELETE_USER_RESET,\r\n  UPDATE_USER_RESET,\r\n  DELETE_USER_SUCCESS,\r\n  UPDATE_USER_SUCCESS,\r\n  DELETE_USER_REQUEST,\r\n  UPDATE_USER_REQUEST,\r\n  CLEAR_ERRORS,\r\n  SINGLE_USER_FAIL,\r\n  SINGLE_USER_SUCCESS,\r\n  SINGLE_USER_REQUEST,\r\n  USER_LOGOUT_FAIL,\r\n  USER_LOGOUT_SUCCESS,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n    case USER_REGISTER_REQUEST:\r\n    case USER_DETAILS_REQUEST:\r\n      return { loading: true, isAuthenticated: false };\r\n    case USER_LOGIN_SUCCESS:\r\n    case USER_REGISTER_SUCCESS:\r\n    case USER_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: true,\r\n        user: action.payload.user,\r\n      };\r\n\r\n    case USER_LOGOUT_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        user: null,\r\n        isAuthenticated: false,\r\n      };\r\n    case USER_LOGIN_FAIL:\r\n    case USER_REGISTER_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        error: action.payload,\r\n      };\r\n    case USER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        error: action.payload,\r\n      };\r\n    case USER_LOGOUT_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return { ...state, error: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n    case UPDATE_USER_REQUEST:\r\n    case DELETE_USER_REQUEST:\r\n      return { ...state, loading: true };\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n    case UPDATE_USER_SUCCESS:\r\n      return { loading: false, isUpdated: action.payload };\r\n\r\n    case DELETE_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isDeleted: action.payload.success,\r\n        message: action.payload.message,\r\n      };\r\n    case USER_UPDATE_PROFILE_RESET:\r\n    case UPDATE_USER_RESET:\r\n      return {\r\n        ...state,\r\n        isUpdated: false,\r\n      };\r\n\r\n    case DELETE_USER_RESET:\r\n      return {\r\n        ...state,\r\n        isDeleted: false,\r\n      };\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n    case UPDATE_USER_FAIL:\r\n    case DELETE_USER_FAIL:\r\n      return { ...state, loading: false, error: action.payload };\r\n\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n//admin get all user\r\nexport const allUserReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case ALL_USERS_REQUEST:\r\n      return { loading: true };\r\n    case ALL_USERS_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n    case ALL_USERS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//admin\r\nexport const getSingleUserReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case SINGLE_USER_REQUEST:\r\n      return { ...state, loading: true };\r\n    case SINGLE_USER_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n    case SINGLE_USER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  LIST_MY_ORDERS_FAIL,\r\n  LIST_MY_ORDERS_REQUEST,\r\n  LIST_MY_ORDERS_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_RESET,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ALL_ORDERS_REQUEST,\r\n  ALL_ORDERS_SUCCESS,\r\n  ALL_ORDERS_FAIL,\r\n  DELETE_ORDER_REQUEST,\r\n  DELETE_ORDER_SUCCESS,\r\n  DELETE_ORDER_RESET,\r\n  DELETE_ORDER_FAIL,\r\n  UPDATE_ORDER_REQUEST,\r\n  UPDATE_ORDER_SUCCESS,\r\n  UPDATE_ORDER_RESET,\r\n  UPDATE_ORDER_FAIL,\r\n  CLEAR_ERRORS,\r\n} from \"../constants/orderConstants\";\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return { ...state, loading: true };\r\n    case ORDER_CREATE_SUCCESS:\r\n      return { loading: false, success: true, order: action.payload };\r\n    case ORDER_CREATE_RESET:\r\n      return { ...state, success: false };\r\n    case ORDER_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDetailsReducer = (state = { order: {} }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return { loading: false, order: action.payload };\r\n    case ORDER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n//for user\r\nexport const myOrders = (state = { orders: [] }, action) => {\r\n  //we need orders\r\n  switch (action.type) {\r\n    case LIST_MY_ORDERS_REQUEST:\r\n      return { loading: true };\r\n    case LIST_MY_ORDERS_SUCCESS:\r\n      return { loading: false, orders: action.payload };\r\n    case LIST_MY_ORDERS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n//for admin\r\nexport const allOrdersReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ALL_ORDERS_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ALL_ORDERS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n\r\n    case ALL_ORDERS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_ORDER_REQUEST:\r\n    case DELETE_ORDER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case UPDATE_ORDER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isUpdated: action.payload.success,\r\n      };\r\n\r\n    case DELETE_ORDER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isDeleted: action.payload.success,\r\n        message: action.payload.message,\r\n      };\r\n\r\n    case UPDATE_ORDER_FAIL:\r\n    case DELETE_ORDER_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case UPDATE_ORDER_RESET:\r\n      return {\r\n        ...state,\r\n        isUpdated: false,\r\n      };\r\n\r\n    case DELETE_ORDER_RESET:\r\n      return {\r\n        ...state,\r\n        isDeleted: false,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <footer>\r\n        <Container fluid>\r\n          <Row className=\"footer\">\r\n            <Col className=\"text-center text-white bg-primary\">\r\n              <span>Copyright &copy; Rajesh</span>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import axios from \"axios\";\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAILS,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAILS,\r\n  DELETE_PRODUCT_FAIL,\r\n  DELETE_PRODUCT_SUCCESS,\r\n  DELETE_PRODUCT_REQUEST,\r\n  UPDATE_PRODUCT_FAIL,\r\n  UPDATE_PRODUCT_SUCCESS,\r\n  UPDATE_PRODUCT_REQUEST,\r\n  NEW_PRODUCT_FAIL,\r\n  NEW_PRODUCT_SUCCESS,\r\n  NEW_PRODUCT_REQUEST,\r\n  ADMIN_PRODUCT_FAIL,\r\n  ADMIN_PRODUCT_SUCCESS,\r\n  ADMIN_PRODUCT_REQUEST,\r\n  DELETE_REVIEW_SUCCESS,\r\n  DELETE_REVIEW_FAIL,\r\n  DELETE_REVIEW_REQUEST,\r\n  ALL_REVIEW_FAIL,\r\n  ALL_REVIEW_SUCCESS,\r\n  ALL_REVIEW_REQUEST,\r\n  NEW_REVIEW_SUCCESS,\r\n  NEW_REVIEW_REQUEST,\r\n  NEW_REVIEW_FAIL,\r\n  CLEAR_ERRORS,\r\n} from \"../constants/productConstant\";\r\n\r\nexport const listProducts =\r\n  //provide default as if arg not passed eg-for admin\r\n\r\n    (\r\n      searchQuery = \"\",\r\n      price = 0,\r\n      selectedCategory = \"\",\r\n      page = 1,\r\n      rating = 0,\r\n      pageSize = 0\r\n    ) =>\r\n    async (dispatch) => {\r\n      try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n        let link = `/api/products?query=${searchQuery}&price=${price}&rating=${rating}&page=${page}&pageSize=${pageSize}`;\r\n        if (selectedCategory) {\r\n          link = `/api/products?query=${searchQuery}&price=${price}&rating=${rating}&category=${selectedCategory}&page=${page}&pageSize=${pageSize}`;\r\n        }\r\n\r\n        const { data } = await axios.get(link);\r\n\r\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n      } catch (error) {\r\n        dispatch({\r\n          type: PRODUCT_LIST_FAILS,\r\n          payload:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        });\r\n      }\r\n    };\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/product/${id}`);\r\n\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAILS,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Get All Products For Admin\r\nexport const getAllProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ADMIN_PRODUCT_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/admin/products\");\r\n\r\n    dispatch({\r\n      type: ADMIN_PRODUCT_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADMIN_PRODUCT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Create Product\r\nexport const createProduct = (productData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: NEW_PRODUCT_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `/api/admin/product/new`,\r\n      productData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: NEW_PRODUCT_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NEW_PRODUCT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Update Product\r\nexport const updateProduct = (id, productData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: UPDATE_PRODUCT_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.put(\r\n      `/api/admin/product/${id}`,\r\n      productData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: UPDATE_PRODUCT_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_PRODUCT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Product\r\nexport const deleteProduct = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DELETE_PRODUCT_REQUEST });\r\n\r\n    const { data } = await axios.delete(`/api/admin/product/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_PRODUCT_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_PRODUCT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// NEW REVIEW\r\nexport const newReview = (reviewData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: NEW_REVIEW_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\"/api/review\", reviewData, config);\r\n\r\n    dispatch({\r\n      type: NEW_REVIEW_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NEW_REVIEW_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Get All Reviews of a Product\r\nexport const getAllReviews = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ALL_REVIEW_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/reviews`, { params: { id: id } });\r\n\r\n    dispatch({\r\n      type: ALL_REVIEW_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ALL_REVIEW_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Review of a Product\r\nexport const deleteReviews = (reviewId, productId) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DELETE_REVIEW_REQUEST });\r\n\r\n    const { data } = await axios.delete(\r\n      `/api/review?id=${reviewId}&productId=${productId}`\r\n    );\r\n\r\n    dispatch({\r\n      type: DELETE_REVIEW_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_REVIEW_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};\r\n","import React from \"react\";\r\n\r\nconst Rating = ({ value, text }) => {\r\n  return (\r\n    <div className=\"rating\">\r\n      <span style={{ color: \"orange\" }}>\r\n        <i\r\n          className={\r\n            value >= 1 ? \"fas fa-star\" : value >= 0.5 ? \"fas fa-star-half\" : \"\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span style={{ color: \"orange\" }}>\r\n        <i\r\n          className={\r\n            value >= 2 ? \"fas fa-star\" : value >= 1.5 ? \"fas fa-star-half\" : \"\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span style={{ color: \"orange\" }}>\r\n        <i\r\n          className={\r\n            value >= 3 ? \"fas fa-star\" : value >= 2.5 ? \"fas fa-star-half\" : \"\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span style={{ color: \"orange\" }}>\r\n        <i\r\n          className={\r\n            value >= 4 ? \"fas fa-star\" : value >= 3.5 ? \"fas fa-star-half\" : \"\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span style={{ color: \"orange\" }}>\r\n        <i\r\n          className={\r\n            value >= 5 ? \"fas fa-star\" : value >= 4.5 ? \"fas fa-star-half\" : \"\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span> | {text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rating;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProductScreen = ({ product }) => {\r\n  return (\r\n    <Card className=\"mybox-shadow p-1 card-layout\">\r\n      <Card.Header>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Img variant=\"top\" src={product.image} />\r\n        </Link>\r\n      </Card.Header>\r\n      <Card.Body className=\"text-center\">\r\n        <Card.Title as=\"div\">\r\n          <Link\r\n            to={`/product/${product._id}`}\r\n            className=\"text-body link-styles\"\r\n          >\r\n            <span>{product.name}</span>\r\n          </Link>\r\n        </Card.Title>\r\n        <Card.Text as=\"div\">\r\n          <Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reviews`}\r\n          />\r\n        </Card.Text>\r\n        <Card.Text as=\"div\">${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      role=\"status\"\r\n      style={{\r\n        width: \"100px\",\r\n        height: \"100px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n      }}\r\n    >\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { clearErrors, listProducts } from \"../actions/productActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ProductScreen from \"./ProductScreen\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  ButtonGroup,\r\n  ListGroup,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nimport Loader from \"../components/shared/Loader\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst categories = [\r\n  \"Electronics\",\r\n  \"Laptop\",\r\n  \"Footwear\",\r\n  \"Bottom\",\r\n  \"Clothes\",\r\n  \"Tops\",\r\n  \"Attire\",\r\n  \"Camera\",\r\n  \"SmartPhones\",\r\n];\r\n\r\nconst HomeScreen = ({ location }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error, products, filteredProductsCount } = useSelector(\r\n    (state) => state.productList\r\n  );\r\n\r\n  const alert = useAlert();\r\n\r\n  const [price, setPrice] = useState(0);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [ratings, setRatings] = useState(0);\r\n  const [pageSize] = useState(8);\r\n\r\n  let searchQuery;\r\n  if (location.search) {\r\n    searchQuery = location.search.split(\"=\")[1];\r\n  }\r\n\r\n  const lastPageHandler = () => {\r\n    if (!loading) {\r\n      let lastP = Math.ceil(filteredProductsCount / pageSize);\r\n      setPage(lastP);\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setPrice(0);\r\n    setSelectedCategory(\"\");\r\n    setRatings(0);\r\n    setPage(1);\r\n    dispatch(listProducts());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n    dispatch(\r\n      listProducts(\r\n        searchQuery,\r\n        price,\r\n        selectedCategory,\r\n        page,\r\n        ratings,\r\n        pageSize\r\n      )\r\n    );\r\n  }, [\r\n    dispatch,\r\n    error,\r\n    alert,\r\n    searchQuery,\r\n    price,\r\n    page,\r\n    selectedCategory,\r\n    ratings,\r\n    pageSize,\r\n  ]);\r\n  return (\r\n    <Container fluid>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Row>\r\n          <Col md={2} className=\"bg-light mb-3\">\r\n            <ListGroup variant=\"flush\" className=\"product-filter\">\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>\r\n                    Filter\r\n                    <Button\r\n                      type=\"button\"\r\n                      onClick={handleReset}\r\n                      className=\"float-right\"\r\n                    >\r\n                      Reset\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <div>\r\n                  <div>Rate Above</div>\r\n                  {[1, 2, 3, 4, 5].map((value) => (\r\n                    <i\r\n                      key={value}\r\n                      className={\r\n                        value <= ratings\r\n                          ? \"fa-solid fa-star\"\r\n                          : \"fa-regular fa-star\"\r\n                      }\r\n                      style={{ color: value <= ratings ? \"orange\" : \"\" }}\r\n                      onClick={() => setRatings(Number(value))}\r\n                    ></i>\r\n                  ))}\r\n                </div>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Form.Group id=\"price\">\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    value={price}\r\n                    className=\"filter-select\"\r\n                    onChange={(e) => setPrice(e.target.value)}\r\n                  >\r\n                    <option value={0}>Max Price</option>\r\n                    {[50, 100, 200, 500, 800, 900, 1000, 10000].map((p) => (\r\n                      <option value={Number(p)} key={p}>\r\n                        less than ${p}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Form.Group id=\"selectedCategory\">\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    value={selectedCategory}\r\n                    className=\"filter-select\"\r\n                    onChange={(e) => setSelectedCategory(e.target.value)}\r\n                  >\r\n                    <option value=\"\">All Categories</option>\r\n                    {categories.map((cate) => (\r\n                      <option value={cate} key={cate}>\r\n                        {cate}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Button as=\"div\" className=\"btn-block \">\r\n                  {page} of{\" \"}\r\n                  {!loading && Math.ceil(filteredProductsCount / pageSize)} page\r\n                </Button>\r\n                <ButtonGroup size=\"sm\">\r\n                  <Button\r\n                    type=\"button\"\r\n                    onClick={() => setPage(1)}\r\n                    disabled={page === 1}\r\n                    variant=\"light\"\r\n                  >\r\n                    First\r\n                  </Button>\r\n                  <Button\r\n                    type=\"button\"\r\n                    onClick={() => setPage((p) => p - 1)}\r\n                    disabled={page === 1}\r\n                    variant=\"light\"\r\n                  >\r\n                    Pre\r\n                  </Button>\r\n\r\n                  <Button\r\n                    type=\"button\"\r\n                    onClick={() => setPage((p) => p + 1)}\r\n                    variant=\"light\"\r\n                    disabled={page * pageSize >= filteredProductsCount}\r\n                  >\r\n                    Next\r\n                  </Button>\r\n                  <Button\r\n                    type=\"button\"\r\n                    onClick={lastPageHandler}\r\n                    variant=\"light\"\r\n                    disabled={page * pageSize >= filteredProductsCount}\r\n                  >\r\n                    Last\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col\r\n            md={9}\r\n            className={`pb-5\r\n              ${filteredProductsCount === 1 ? \"\" : \"products-col\"}`}\r\n            id=\"products-col\"\r\n          >\r\n            <Row className=\"products-row align-content-md-between justify-content-center\">\r\n              {products &&\r\n                products.map((product) => {\r\n                  return (\r\n                    <Col\r\n                      key={product._id}\r\n                      lg={3}\r\n                      md={{ span: 4, offset: 0 }}\r\n                      sm={{ span: 4, offset: 0 }}\r\n                      xs={{ span: 6, offset: 0 }}\r\n                      className=\"product-col mb-2\"\r\n                    >\r\n                      <ProductScreen product={product} />\r\n                    </Col>\r\n                  );\r\n                })}\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import {\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  ALL_USERS_REQUEST,\r\n  ALL_USERS_SUCCESS,\r\n  ALL_USERS_FAIL,\r\n  UPDATE_USER_REQUEST,\r\n  UPDATE_USER_SUCCESS,\r\n  UPDATE_USER_FAIL,\r\n  DELETE_USER_FAIL,\r\n  DELETE_USER_SUCCESS,\r\n  DELETE_USER_REQUEST,\r\n  CLEAR_ERRORS,\r\n  SINGLE_USER_FAIL,\r\n  SINGLE_USER_SUCCESS,\r\n  SINGLE_USER_REQUEST,\r\n  USER_LOGOUT_SUCCESS,\r\n  USER_LOGOUT_FAIL,\r\n} from \"../constants/userConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  try {\r\n    await axios.get(\"/api/logout\");\r\n    dispatch({ type: USER_LOGOUT_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGOUT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const { data } = await axios.post(\r\n      \"/api/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const register = (userData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const { data } = await axios.post(\"/api/register\", userData, config);\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/${id}`);\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProfile = (userData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.put(\"/api/profile/update\", userData, config);\r\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\r\n    // dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Delete User\r\nexport const deleteUser = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DELETE_USER_REQUEST });\r\n\r\n    const { data } = await axios.delete(`/api/admin/user/${id}`);\r\n\r\n    dispatch({ type: DELETE_USER_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_USER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Update User\r\nexport const updateUser = (id, userData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: UPDATE_USER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.put(`/api/admin/user/${id}`, userData, config);\r\n\r\n    dispatch({ type: UPDATE_USER_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_USER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n//admin\r\nexport const getSingleUser = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: SINGLE_USER_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/admin/user/${id}`);\r\n\r\n    dispatch({ type: SINGLE_USER_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SINGLE_USER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getAllUsers = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ALL_USERS_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/admin/users\");\r\n\r\n    dispatch({ type: ALL_USERS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ALL_USERS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport HomeScreen from \"../screens/HomeScreen\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Button, Form, FormControl, NavDropdown } from \"react-bootstrap\";\r\nimport { logout } from \"../actions/userAction\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const { user, isAuthenticated } = useSelector((state) => state.user);\r\n\r\n  const history = useHistory();\r\n\r\n  const cartClickHandler = () => {\r\n    history.push(\"/cart\");\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n    alert.success(\"Logged out successfully\");\r\n  };\r\n\r\n  const searchSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (search.trim()) {\r\n      history.push(`/?search=${search}`);\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        bg=\"primary\"\r\n        expand=\"lg\"\r\n        variant=\"dark\"\r\n        sticky=\"top\"\r\n        collapseOnSelect\r\n      >\r\n        <Container>\r\n          <LinkContainer to=\"/\" component={<HomeScreen />}>\r\n            <Navbar.Brand className=\"header-nav\">Wys</Navbar.Brand>\r\n          </LinkContainer>\r\n\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Form\r\n              inline\r\n              onSubmit={searchSubmitHandler}\r\n              className=\"search ml-auto\"\r\n            >\r\n              <i className=\"fa-solid fa-magnifying-glass icon search-icon\"></i>\r\n              <FormControl\r\n                type=\"text\"\r\n                placeholder=\"Search...\"\r\n                value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n              <Button type=\"submit\" className=\"text-dark\">\r\n                Search\r\n              </Button>\r\n            </Form>\r\n\r\n            <Nav className=\"ml-auto\">\r\n              <Nav>\r\n                <LinkContainer to=\"/about\">\r\n                  <Nav.Link>About</Nav.Link>\r\n                </LinkContainer>\r\n              </Nav>\r\n              <Nav>\r\n                <LinkContainer to=\"/contact\">\r\n                  <Nav.Link>Contact</Nav.Link>\r\n                </LinkContainer>\r\n              </Nav>\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link onClick={cartClickHandler}>\r\n                  <i className=\"fa-solid fa-cart-shopping\"></i>\r\n                  &nbsp;Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {isAuthenticated ? (\r\n                <NavDropdown title={user && user.name} id=\"username\">\r\n                  {user && user.role === \"Admin\" && (\r\n                    <LinkContainer to=\"/admin/dashboard\">\r\n                      <NavDropdown.Item>\r\n                        <i className=\"fa-solid fa-gauge\"></i>&nbsp; Admin\r\n                        Dashboard\r\n                      </NavDropdown.Item>\r\n                    </LinkContainer>\r\n                  )}\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>\r\n                      <i className=\"fa-solid fa-user text-secondry\"></i>\r\n                      &nbsp; Profile\r\n                    </NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/myorders\">\r\n                    <NavDropdown.Item>\r\n                      <i className=\"fa-solid fa-list\"></i>&nbsp; Orders\r\n                    </NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    <i className=\"fa-solid fa-right-from-bracket text-danger\"></i>\r\n                    &nbsp; Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link>\r\n                    <i className=\"fa-solid fa-user\"></i>&nbsp; Signin\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import axios from \"axios\";\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n} from \"../constants/cartConstant\";\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/product/${id}`);\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  });\r\n\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\nexport const RemoveFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({ type: CART_REMOVE_ITEM, payload: id });\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({ type: CART_SAVE_SHIPPING_ADDRESS, payload: data });\r\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  });\r\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  clearErrors,\r\n  listProductDetails,\r\n  newReview,\r\n} from \"../actions/productActions\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  ListGroupItem,\r\n  Form,\r\n  Button,\r\n  Modal,\r\n  Card,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Rating from \"../components/Rating\";\r\nimport Loader from \"../components/shared/Loader\";\r\nimport { addToCart } from \"../actions/cartAction\";\r\nimport { NEW_REVIEW_RESET } from \"../constants/productConstant\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst ProductDetails = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  const [qty, setQty] = useState(1);\r\n  const [show, setShow] = useState(false);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n  const commentFocus = useRef(null);\r\n\r\n  const { loading, product, error } = useSelector(\r\n    (state) => state.productDetails\r\n  );\r\n\r\n  const { isAuthenticated } = useSelector((state) => state.user);\r\n\r\n  const productId = match.params.id;\r\n\r\n  const { success: successReview, error: reviewError } = useSelector(\r\n    (state) => state.newReview\r\n  );\r\n\r\n  const addToCartHandler = () => {\r\n    dispatch(addToCart(productId, Number(qty)));\r\n    alert.success(\"Item added to cart successfully\");\r\n  };\r\n\r\n  const submitReviewToggle = () => {\r\n    if (isAuthenticated) {\r\n      show ? setShow(false) : setShow(true);\r\n      setComment(\"\");\r\n      setRating(0);\r\n    } else {\r\n      history.push(`/login?redirect=products/${productId}`);\r\n    }\r\n  };\r\n\r\n  const submitReviewHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!comment || !rating) {\r\n      if (!comment) {\r\n        alert.error(\"Give your comment!\");\r\n        commentFocus.current.focus();\r\n      }\r\n      if (!rating) {\r\n        alert.error(\"Give star\");\r\n      }\r\n      return;\r\n    }\r\n    dispatch(newReview({ comment, rating, productId }));\r\n    setRating(0);\r\n    setShow(false);\r\n  };\r\n  useEffect(() => {\r\n    if (reviewError) {\r\n      alert.error(reviewError);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (successReview) {\r\n      alert.success(\"Review Submitted Successfully\");\r\n      dispatch({ type: NEW_REVIEW_RESET });\r\n    }\r\n\r\n    dispatch(listProductDetails(productId));\r\n  }, [dispatch, productId, successReview, reviewError, alert, error]);\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <h2 className=\"text-center text-muted\">PRODUCT DETAILS</h2>\r\n          <Link to=\"/\" className=\"btn btn-light\">\r\n            <i className=\"fa-solid fa-arrow-left\"></i>\r\n            &nbsp;GO BACK\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Row className=\"p-3 my-3\">\r\n          <Col md={5} className=\"mybox-shadow m-2 p-2\">\r\n            <Image src={product.image} alt={product.name} fluid />\r\n          </Col>\r\n          <Col md={3} className=\"mybox-shadow m-2 p-2\">\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h3>{product.name}</h3>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Rating\r\n                  value={product.rating}\r\n                  text={`${product.numReviews} reviews`}\r\n                />\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n              <ListGroup.Item className=\"text-justify\">\r\n                {product.description}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={3} className=\"mybox-shadow m-2 p-2\">\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>\r\n                    Status\r\n                    <div className=\"float-right\">\r\n                      <b\r\n                        className={\r\n                          product.countInStock > 0\r\n                            ? \"text-success\"\r\n                            : \"text-danger\"\r\n                        }\r\n                      >\r\n                        {product.countInStock > 0 ? \"Instock\" : \"Outstock\"}\r\n                      </b>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {product.countInStock > 0 && (\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>\r\n                      Quantity\r\n                      <div className=\"float-right\">\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={qty}\r\n                          className=\"form-outline-none float-right\"\r\n                          onChange={(e) => setQty(e.target.value)}\r\n                        >\r\n                          {[...Array(product.countInStock).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              )}\r\n              <ListGroupItem>\r\n                <Button\r\n                  className=\"btn-block\"\r\n                  type=\"button\"\r\n                  onClick={addToCartHandler}\r\n                  disabled={product.countInStock === 0}\r\n                >\r\n                  Add to cart\r\n                </Button>\r\n              </ListGroupItem>\r\n\r\n              <ListGroupItem>\r\n                <Button\r\n                  onClick={submitReviewToggle}\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                >\r\n                  Submit review\r\n                </Button>\r\n\r\n                {show && (\r\n                  <>\r\n                    <Modal show={show} onHide={submitReviewToggle}>\r\n                      <Modal.Header closeButton>\r\n                        <Modal.Title className=\"text-muted\">\r\n                          Submit Review\r\n                        </Modal.Title>\r\n                      </Modal.Header>\r\n                      <Modal.Body>\r\n                        <Modal.Title className=\"text-muted\">\r\n                          Rate us\r\n                        </Modal.Title>\r\n                        <div>\r\n                          {[1, 2, 3, 4, 5].map((value) => (\r\n                            <span\r\n                              onClick={() => setRating(value)}\r\n                              key={value}\r\n                              style={{\r\n                                cursor: \"pointer\",\r\n                                fontSize: \"3em\",\r\n                                color: value <= rating ? \"yellow\" : \"\",\r\n                              }}\r\n                            >\r\n                              {value <= rating ? \"★\" : \"☆\"}\r\n                            </span>\r\n                          ))}\r\n                        </div>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          placeholder=\"Comment...\"\r\n                          rows={5}\r\n                          cols={60}\r\n                          ref={commentFocus}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        />\r\n                      </Modal.Body>\r\n                      <Modal.Footer>\r\n                        <Button\r\n                          variant=\"secondary\"\r\n                          onClick={submitReviewToggle}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={submitReviewHandler}>\r\n                          Submit\r\n                        </Button>\r\n                      </Modal.Footer>\r\n                    </Modal>\r\n                  </>\r\n                )}\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={12}>\r\n            <Row className=\"my-3\">\r\n              <Col>\r\n                <h2 className=\"text-center text-muted review-heading-underline\">\r\n                  Review\r\n                </h2>\r\n              </Col>\r\n            </Row>\r\n            {product.reviews && product.reviews[0] ? (\r\n              <Row className=\"review-row mybox-shadow\">\r\n                {product.reviews.map((rev) => (\r\n                  <Col className=\"review-col p-3\" key={rev._id}>\r\n                    <Card className=\"mybox-shadow text-center card-layout p-1\">\r\n                      <Card.Header>\r\n                        <Card.Img\r\n                          variant=\"top\"\r\n                          src=\"/Profile.png\"\r\n                          alt=\"profile\"\r\n                          className=\"review-profile-img\"\r\n                        />\r\n                      </Card.Header>\r\n                      <Card.Title>{rev.name}</Card.Title>\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          {[...Array(rev.rating).keys()].map((star) => (\r\n                            <i\r\n                              className=\"fas fa-star text-warning\"\r\n                              key={star}\r\n                            ></i>\r\n                          ))}\r\n                        </Card.Text>\r\n                        <Card.Text className=\"text-justify\">\r\n                          {rev.comment}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            ) : (\r\n              <div className=\"bg-warning text-center p-1\">No Reviews Yet</div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProductDetails;\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\n//without close & timer\r\nconst Message = ({ children, variant }) => {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addToCart, RemoveFromCart } from \"../actions/cartAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Message from \"../components/shared/Message\";\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Container,\r\n} from \"react-bootstrap\";\r\n\r\nconst CartScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const { cartItems } = useSelector((state) => state.cart);\r\n\r\n  const RemoveFromCartHandler = (id) => {\r\n    dispatch(RemoveFromCart(id));\r\n  };\r\n  const checkout = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h2 className=\"text-muted text-center\">Shopping Cart</h2>\r\n      <Row className=\"justify-content-md-center mb-5 mt-4 mybox-shadow p-3\">\r\n        <Col md={7}>\r\n          {cartItems.length === 0 ? (\r\n            <Message>\r\n              Your Cart is Empty ! <Link to=\"/\">Go back</Link>\r\n            </Message>\r\n          ) : (\r\n            <>\r\n              {cartItems.map((item) => (\r\n                <Card key={item.product} className=\"mybox-shadow mb-2\">\r\n                  <Row className=\"justify-content-between p-3\">\r\n                    <Col md={2}>\r\n                      <Image src={item.image} fluid rounded />\r\n                    </Col>\r\n                    <Col md={3}>\r\n                      <Link\r\n                        to={`/product/${item.product}`}\r\n                        className=\"link-styles text-body\"\r\n                      >\r\n                        {item.name}\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={2}>${item.price}</Col>\r\n\r\n                    <Col md={2}>\r\n                      <div className=\"float-sm-right float-md-left\">\r\n                        <Form.Control\r\n                          className=\"form-outline-none mb-1\"\r\n                          as=\"select\"\r\n                          name={item.name}\r\n                          value={item.qty}\r\n                          onChange={(e) =>\r\n                            dispatch(\r\n                              addToCart(item.product, Number(e.target.value))\r\n                            )\r\n                          }\r\n                        >\r\n                          {[...Array(item.countInStock).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </div>\r\n\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"light\"\r\n                        onClick={() => RemoveFromCartHandler(item.product)}\r\n                      >\r\n                        <i className=\"fa fa-trash text-danger\"></i>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              ))}\r\n            </>\r\n          )}\r\n        </Col>\r\n        <Col md={4}>\r\n          <ListGroup variant=\"flush\" className=\"mybox-shadow mb-3\">\r\n            <ListGroup.Item>\r\n              <h2 className=\"text-muted text-nowrap\">\r\n                Subtotal items(\r\n                {cartItems.reduce((acc, p) => acc + p.qty, 0)})\r\n              </h2>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <p>\r\n                Total Price: &nbsp; $\r\n                {cartItems.reduce((t, p) => t + p.price * p.qty, 0).toFixed(2)}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type=\"button\"\r\n                className=\"btn-block\"\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkout}\r\n              >\r\n                Procede to checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import React from \"react\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\n\r\nconst formContainer = ({ children, title }) => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center align-content-md-center h-500\">\r\n        <Col md={3} className=\"mybox-shadow p-3\">\r\n          <h2 className=\"text-muted text-center\">{title}</h2>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default formContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { clearErrors, login } from \"../actions/userAction\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/shared/Loader\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormContainer from \"../components/shared/FormContainer\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n  const { loading, error, isAuthenticated } = useSelector(\r\n    (state) => state.user\r\n  );\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/profile\";\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      history.push(redirect);\r\n    }\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n  }, [dispatch, history, isAuthenticated, redirect, alert, error]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <FormContainer title=\"SIGNIN\">\r\n          <Form onSubmit={submitHandler} className=\"login\">\r\n            <Form.Group controlId=\"email\">\r\n              <i className=\"fa-solid fa-user icon\"></i>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <i className=\"fa-solid fa-lock icon\"></i>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"enter password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              SIGN IN\r\n            </Button>\r\n          </Form>\r\n          <Row>\r\n            <Col>\r\n              New Customer ?{\" \"}\r\n              <Link\r\n                to={redirect ? `register?redirect=${redirect}` : \"/register\"}\r\n              >\r\n                Register\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </FormContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import axios from \"axios\";\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  LIST_MY_ORDERS_REQUEST,\r\n  LIST_MY_ORDERS_SUCCESS,\r\n  LIST_MY_ORDERS_FAIL,\r\n  ALL_ORDERS_REQUEST,\r\n  ALL_ORDERS_SUCCESS,\r\n  ALL_ORDERS_FAIL,\r\n  DELETE_ORDER_REQUEST,\r\n  DELETE_ORDER_SUCCESS,\r\n  DELETE_ORDER_FAIL,\r\n  UPDATE_ORDER_REQUEST,\r\n  UPDATE_ORDER_SUCCESS,\r\n  UPDATE_ORDER_FAIL,\r\n  CLEAR_ERRORS,\r\n} from \"../constants/orderConstants\";\r\n\r\nexport const createOrder = (order) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ORDER_CREATE_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\"/api/order/new\", order, config);\r\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n//getOrder by id\r\nexport const getOrderDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/order/${id}`);\r\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n//get paid and unpaid orders to login user\r\nexport const orderList = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LIST_MY_ORDERS_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/orders/myorders\");\r\n    dispatch({ type: LIST_MY_ORDERS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LIST_MY_ORDERS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n//admin route\r\nexport const getAllOrders = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ALL_ORDERS_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/admin/orders\");\r\n    dispatch({ type: ALL_ORDERS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ALL_ORDERS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteOrder = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DELETE_ORDER_REQUEST });\r\n\r\n    const { data } = await axios.delete(`/api/admin/order/${id}`);\r\n\r\n    dispatch({ type: DELETE_ORDER_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_ORDER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateOrder = (id, order) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: UPDATE_ORDER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/admin/order/${id}`, order, config);\r\n\r\n    dispatch({ type: UPDATE_ORDER_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_ORDER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { register } from \"../actions/userAction\";\r\nimport { Form, Button, Row, Col, Image } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../components/shared/Loader\";\r\nimport FormContainer from \"../components/shared/FormContainer\";\r\nimport { clearErrors } from \"../actions/orderActions\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setImail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [avatarPreview, setAvatarPreview] = useState(\"/Profile.png\");\r\n\r\n  const passwordElement = useRef(null);\r\n  const confirmPasswordElement = useRef(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  const { loading, error, isAuthenticated } = useSelector(\r\n    (state) => state.user\r\n  );\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/profile\";\r\n\r\n  const inputs = document.querySelectorAll(\r\n    \".register .form-group .form-control\"\r\n  );\r\n\r\n  inputs.forEach((input) => {\r\n    input.classList.remove(\"form-error\", \"form-success\");\r\n  });\r\n  const imageSubmitHandler = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setAvatar(reader.result);\r\n        setAvatarPreview(reader.result);\r\n      }\r\n    };\r\n    reader.onerror = (err) => console.error(err);\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n  const userRegisterSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!name || !email || !password || !avatar) {\r\n      alert.error(\"Please provide all information\");\r\n\r\n      inputs.forEach((input) => {\r\n        if (!input.value) {\r\n          input.classList.add(\"form-error\");\r\n        } else {\r\n          input.classList.add(\"form-success\");\r\n          input.classList.remove(\"form-error\");\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      alert.error(\"Password do not match\");\r\n      confirmPasswordElement.current.focus();\r\n      //we have to implement eye feature\r\n      setConfirmPassword(\"\");\r\n      return;\r\n    }\r\n    dispatch(register({ name, email, password, avatar }));\r\n\r\n    inputs.forEach((input) => {\r\n      input.classList.remove(\"form-error\", \"form-success\");\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      history.push(redirect);\r\n    }\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n  }, [history, isAuthenticated, redirect, dispatch, alert, error]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <FormContainer title=\"Register\">\r\n          <Form onSubmit={userRegisterSubmitHandler} className=\"register\">\r\n            <Form.Group controlId=\"name\">\r\n              <i className=\"fa-regular fa-face-smile icon\"></i>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <i className=\"fa-solid fa-user icon\"></i>\r\n\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(e) => setImail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <i className=\"fa-solid fa-lock icon\"></i>\r\n\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                ref={passwordElement}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"confirmPassword\">\r\n              <i className=\"fa-solid fa-check icon\"></i>\r\n\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"re-enter password\"\r\n                value={confirmPassword}\r\n                ref={confirmPasswordElement}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"avatar\" className=\"profile-pic\">\r\n              <Image\r\n                src={avatarPreview}\r\n                fluid\r\n                className=\"profile-img\"\r\n                alt=\"avatar preview\"\r\n              />\r\n              <Form.Control\r\n                type=\"file\"\r\n                name=\"avatar\"\r\n                accept=\"image/*\"\r\n                onChange={imageSubmitHandler}\r\n              />\r\n            </Form.Group>\r\n            <Button type=\"submit\" variant=\"primary\" block>\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n          <Row>\r\n            <Col>\r\n              Have an account !{\" \"}\r\n              <Link to={redirect ? `login?redirect=${redirect}` : \"/login\"}>\r\n                Login\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </FormContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image, Container } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/shared/Loader\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { clearErrors } from \"../actions/userAction\";\r\n\r\nconst ProfileScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { loading, user, error } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    // if (!user.name) {\r\n    //   dispatch(getUserDetails(\"profile\"));\r\n    // }\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n  }, [dispatch, error]);\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Container>\r\n          <Row>\r\n            <Col md={4}>\r\n              <Image\r\n                src={user.avatar.url ? user.avatar.url : \"/Profile.png\"}\r\n                fluid\r\n                alt={user.name}\r\n              />\r\n            </Col>\r\n            <Col md={7}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  Full Name\r\n                  <div>{user && user.name}</div>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Email\r\n                  <div>{user && user.email}</div>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <div>\r\n                    Joined At{\" \"}\r\n                    <span>\r\n                      {user.createdAt && user.createdAt.substring(0, 10)}\r\n                    </span>\r\n                  </div>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <LinkContainer to=\"/profile/update\">\r\n                    <Button type=\"button\" className=\"btn-block\">\r\n                      Edit Profile\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <LinkContainer to=\"/myorders\">\r\n                    <Button variant=\"info\" className=\"btn-block\">\r\n                      My Orders\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst CheckoutStep = ({ step1, step2, step3 }) => {\r\n  return (\r\n    <>\r\n      <Nav className=\"justify-content-between flex-nowrap\">\r\n        <Nav.Item>\r\n          {step1 ? (\r\n            <LinkContainer to=\"/shipping\">\r\n              <Nav.Link>\r\n                <i className=\"fa-solid fa-truck-fast\"></i>\r\n                &nbsp;Shipping\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n          ) : (\r\n            <Nav.Link disabled>\r\n              <i className=\"fa-solid fa-truck-fast\"></i>\r\n              &nbsp;Shipping\r\n            </Nav.Link>\r\n          )}\r\n        </Nav.Item>\r\n\r\n        <Nav.Item className=\"after-before-line\">\r\n          {step2 ? (\r\n            <LinkContainer to=\"/placeorder\">\r\n              <Nav.Link>\r\n                <i className=\"fa-solid fa-check-to-slot\"></i>\r\n                &nbsp; Place order\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n          ) : (\r\n            <Nav.Link disabled>\r\n              <i className=\"fa-solid fa-check-to-slot\"></i>\r\n              &nbsp;Place order\r\n            </Nav.Link>\r\n          )}\r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n          {step3 ? (\r\n            <LinkContainer to=\"/payment\">\r\n              <Nav.Link>\r\n                <i className=\"fa-solid fa-money-check\"></i>\r\n                &nbsp;Payment\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n          ) : (\r\n            <Nav.Link disabled>\r\n              <i className=\"fa-solid fa-money-check\"></i>\r\n              &nbsp;Payment\r\n            </Nav.Link>\r\n          )}\r\n        </Nav.Item>\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckoutStep;\r\n","import React, { useState } from \"react\";\r\nimport FormContainer from \"../components/shared/FormContainer\";\r\nimport { Form, Button, Container } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { saveShippingAddress } from \"../actions/cartAction\";\r\nimport CheckoutStep from \"../components/shared/CheckoutStep\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const { shippingAddress } = useSelector((state) => state.cart);\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n  const [mobileNo, setMobileNo] = useState(shippingAddress.mobileNo);\r\n\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (mobileNo.length > 10 || mobileNo.length < 10) {\r\n      alert.error(\"Number must be 10 digits\");\r\n      return;\r\n    }\r\n    dispatch(\r\n      saveShippingAddress({ address, city, postalCode, country, mobileNo })\r\n    );\r\n    history.push(\"/placeorder\");\r\n  };\r\n  return (\r\n    <Container>\r\n      <CheckoutStep step1 />\r\n      <FormContainer title=\"Enter address\">\r\n        <Form onSubmit={submitHandler} className=\"shipping bg-white\">\r\n          <Form.Group controlId=\"address\">\r\n            <i className=\"fa-solid fa-house icon\"></i>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Address\"\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"city\">\r\n            <i className=\"fa-solid fa-city icon\"></i>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"City\"\r\n              value={city}\r\n              onChange={(e) => setCity(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"postalCode\">\r\n            <i className=\"fa-solid fa-city icon\"></i>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"PostalCode\"\r\n              value={postalCode}\r\n              onChange={(e) => setPostalCode(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"country\">\r\n            <i className=\"fa-solid fa-earth-americas icon\"></i>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Country\"\r\n              value={country}\r\n              onChange={(e) => setCountry(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"mobileNo\">\r\n            <i className=\"fa-solid fa-phone icon\"></i>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Phone no\"\r\n              value={mobileNo}\r\n              onChange={(e) => setMobileNo(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\" className=\"btn-block\">\r\n            Continue\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Col, Button, Row, Container } from \"react-bootstrap\";\r\nimport CheckoutStep from \"../components/shared/CheckoutStep\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { savePaymentMethod } from \"../actions/cartAction\";\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push(\"/order/pay\");\r\n  };\r\n  return (\r\n    <Container>\r\n      <CheckoutStep step1 step2 step3 />\r\n      <Row className=\"justify-content-center pt-5\">\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group>\r\n            <Form.Label as=\"legend\">Select Payment Method</Form.Label>\r\n            <Col>\r\n              <Form.Check\r\n                type=\"radio\"\r\n                checked\r\n                label=\"PayPal or Credit Card\"\r\n                id=\"PayPal\"\r\n                name=\"paymentmethod\"\r\n                value=\"PayPal\"\r\n                onChange={(e) => setPaymentMethod(e.target.value)}\r\n              ></Form.Check>\r\n            </Col>\r\n          </Form.Group>\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Continue\r\n          </Button>\r\n        </Form>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CheckoutStep from \"../components/shared/CheckoutStep\";\r\nimport { Row, Col, ListGroup, Image, Button, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const { shippingAddress, cartItems } = useSelector((state) => state.cart);\r\n  const { user } = useSelector((state) => state.user);\r\n\r\n  if (!shippingAddress.address) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  const itemsPrice = cartItems\r\n    .reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    .toFixed(2);\r\n\r\n  const shippingPrice = itemsPrice > 1000 ? 0 : 50;\r\n\r\n  const taxPrice = Number(0.15 * itemsPrice).toFixed(2);\r\n\r\n  const totalPrice = Math.round(\r\n    Number(itemsPrice) + Number(shippingPrice) + Number(taxPrice)\r\n  );\r\n\r\n  const address = `${shippingAddress.address}\r\n    ${shippingAddress.city}\r\n    ${shippingAddress.postalCode}\r\n    ${shippingAddress.country}\r\n    ${shippingAddress.mobileNo}`;\r\n\r\n  const placeOrderHandler = () => {\r\n    const data = {\r\n      orderItems: cartItems,\r\n      shippingAddress,\r\n      itemsPrice,\r\n      shippingPrice,\r\n      taxPrice,\r\n      totalPrice,\r\n    };\r\n    sessionStorage.setItem(\"orderInfo\", JSON.stringify(data));\r\n    history.push(\"/payment\");\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <CheckoutStep step1 step2 />\r\n      <Row className=\"justify-content-md-center my-5\">\r\n        <Col md={7}>\r\n          <ListGroup variant=\"flush\">\r\n            <h4 className=\"text-muted\">Shipping Info</h4>\r\n            <ListGroup.Item className=\"\">\r\n              <Row>\r\n                <Col>\r\n                  <address>\r\n                    <p>\r\n                      <span>Name : &nbsp;</span>\r\n                      <span>{user.name}</span>\r\n                    </p>\r\n                    <p>\r\n                      <span>Email: &nbsp;</span>\r\n                      <span>{user.email}</span>\r\n                    </p>\r\n                    <p>\r\n                      <span>Phone: &nbsp;</span>\r\n                      <span>{shippingAddress.mobileNo}</span>\r\n                    </p>\r\n                    <p>\r\n                      <span>Address: &nbsp;</span>\r\n                      <span>{address}</span>\r\n                    </p>\r\n                  </address>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n          <ListGroup variant=\"flush\">\r\n            <h4 className=\"text-muted\">Order items</h4>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item\r\n                key={item.product}\r\n                className=\"mx-4 mybox-shadow my-1\"\r\n              >\r\n                <Row className=\"justify-content-md-between\">\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid></Image>\r\n                  </Col>\r\n                  <Col>\r\n                    <Link\r\n                      to={`/product/${item.product}`}\r\n                      className=\"link-styles text-body\"\r\n                    >\r\n                      {item.name}\r\n                    </Link>\r\n                  </Col>\r\n                  <Col md={4}>\r\n                    {item.qty} X ${item.price} = &nbsp;\r\n                    <b>${(item.qty * item.price).toFixed(2)}</b>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <ListGroup variant=\"flush\" className=\"mybox-shadow order-summary\">\r\n            <ListGroup.Item>\r\n              <h4 className=\"text-muted\">Order Summary</h4>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Row>\r\n                <Col>Subtotal</Col>\r\n                <Col>$ {itemsPrice}</Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>Shipping Charges</Col>\r\n                <Col>$ {shippingPrice}</Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>Tax</Col>\r\n                <Col>$ {taxPrice}</Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Row>\r\n                <Col>Total</Col>\r\n                <Col>$ {totalPrice}</Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                variant=\"primary\"\r\n                className=\"btn-block\"\r\n                type=\"button\"\r\n                onClick={placeOrderHandler}\r\n                disabled={cartItems.length === 0}\r\n              >\r\n                Place order\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { clearErrors, createOrder } from \"../actions/orderActions\";\r\nimport axios from \"axios\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Loader from \"../components/shared/Loader\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nconst OrderPayScreen = ({ history }) => {\r\n  const order = JSON.parse(sessionStorage.getItem(\"orderInfo\"));\r\n  const [apiClientId, setApiClientId] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const alert = useAlert();\r\n\r\n  const { paymentMethod } = useSelector((state) => state.cart);\r\n  const { orderCreateError } = useSelector((state) => state.orderCreate);\r\n\r\n  const successPaymentHandler = (result, data) => {\r\n    console.log(result, \"result\", data);\r\n    order.paymentResult = {\r\n      id: result.id,\r\n      status: result.status,\r\n      update_time: result.update_time,\r\n      email_address: result.payer.email_address,\r\n    };\r\n    order.paidAt = result.create_time;\r\n    order.paymentMethod = paymentMethod;\r\n    dispatch(createOrder(order));\r\n    history.push(\"/success\");\r\n    sessionStorage.removeItem(\"orderInfo\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const addPaypalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n\r\n      script.onload = () => {\r\n        setApiClientId(clientId);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n    //window.paypal\r\n    addPaypalScript();\r\n\r\n    if (orderCreateError) {\r\n      alert.error(orderCreateError);\r\n      dispatch(clearErrors());\r\n    }\r\n  }, [alert, orderCreateError, dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      <Row\r\n        className=\"justify-content-center align-items-center \"\r\n        style={{ height: \"500px\" }}\r\n      >\r\n        <Col md={3}>\r\n          <h4 className=\"text-muted text-center\">Pay {order.totalPrice}</h4>\r\n          {!apiClientId ? (\r\n            <Loader />\r\n          ) : (\r\n            <PayPalButton\r\n              amount={order.totalPrice}\r\n              onSuccess={successPaymentHandler}\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OrderPayScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Row, Col, Table, Container } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/shared/Loader\";\r\nimport { clearErrors, orderList } from \"../actions/orderActions\";\r\n\r\nconst ShowOrders = () => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error, orders } = useSelector((state) => state.listMyOrders);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n    dispatch(orderList());\r\n  }, [dispatch, error]);\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col md={10}>\r\n          <h2 className=\"text-muted\">My orders</h2>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : (\r\n            <Table striped bordered hover responsive className=\"table-sm\">\r\n              <thead>\r\n                <tr className=\"bg-primary text-center text-nowrap\">\r\n                  <td>ORDER ID</td>\r\n                  <td>DATE</td>\r\n                  <td>AMOUNT</td>\r\n                  <td>ITEMS QTY</td>\r\n                  <td>STATUS</td>\r\n                  <td>ACTIONS</td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {orders ? (\r\n                  orders.map((order) => (\r\n                    <tr key={order._id} className=\"text-center\">\r\n                      <td>{order._id}</td>\r\n                      <td>{order.createdAt.substring(0, 10)}</td>\r\n                      <td>{order.totalPrice}</td>\r\n                      <td>{order.orderItems.length}</td>\r\n                      <td>\r\n                        <div\r\n                          className={\r\n                            order.orderStatus === \"Delivered\"\r\n                              ? \"text-danger\"\r\n                              : \"text-success\"\r\n                          }\r\n                        >\r\n                          {order.orderStatus}\r\n                        </div>\r\n                        {order.orderStatus === \"Delivered\"\r\n                          ? order.deliveredAt &&\r\n                            order.deliveredAt.substring(0, 10)\r\n                          : \"\"}\r\n                      </td>\r\n                      <td>\r\n                        <LinkContainer to={`/order/${order._id}`}>\r\n                          <Button variant=\"light\">\r\n                            <i className=\"bi bi-arrow-up-right-square\"></i>\r\n                          </Button>\r\n                        </LinkContainer>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <tr className=\"text-light bg-warning text-center\">\r\n                    <td colSpan={5}>No Order Found</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </Table>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ShowOrders;\r\n","import React from \"react\";\r\nimport { Col, Nav, NavDropdown, Row } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nconst Sidebar = () => {\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <Nav className=\"flex-column  admin-sidebar bg-light text-white pt-4 text-center\">\r\n          <Nav.Item>\r\n            <LinkContainer to=\"/admin/dashboard\">\r\n              <Nav.Link className=\"admin-sidebar-nav\">\r\n                <i className=\"fa-solid fa-gauge\"></i> Dashboard\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n          </Nav.Item>\r\n          <NavDropdown title=\"Products\" className=\"admin-sidebar-nav\">\r\n            <LinkContainer to=\"/admin/products\">\r\n              <NavDropdown.Item className=\"admin-sidebar-nav\">\r\n                <i className=\"fa-solid fa-list\"></i> All\r\n              </NavDropdown.Item>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/admin/newproduct\">\r\n              <NavDropdown.Item className=\"admin-sidebar-nav\">\r\n                <i className=\"fa-solid fa-plus\"></i> Create\r\n              </NavDropdown.Item>\r\n            </LinkContainer>\r\n          </NavDropdown>\r\n          <Nav.Item>\r\n            <LinkContainer to=\"/admin/orders\">\r\n              <Nav.Link className=\"admin-sidebar-nav\">\r\n                <i className=\"fa-solid fa-list\"></i> Orders\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <LinkContainer to=\"/admin/users\">\r\n              <Nav.Link className=\"admin-sidebar-nav\">\r\n                <i className=\"fa-solid fa-users\"></i> Users\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <LinkContainer to=\"/admin/reviews\">\r\n              <Nav.Link className=\"admin-sidebar-nav\">\r\n                <i className=\"fa-solid fa-star\"></i> Reviews\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n          </Nav.Item>\r\n        </Nav>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nconst AdminContainer = ({ children }) => {\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col md={2}>\r\n          <Sidebar />\r\n        </Col>\r\n        <Col md={9}>{children}</Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AdminContainer;\r\n","import React, { useEffect } from \"react\";\r\nimport AdminContainer from \"./layout/AdminContainer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllProducts } from \"../actions/productActions\";\r\nimport { getAllUsers } from \"../actions/userAction\";\r\nimport { getAllOrders } from \"../actions/orderActions\";\r\n\r\nconst Dashboard = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { products } = useSelector((state) => state.productList);\r\n\r\n  const { users } = useSelector((state) => state.listUser);\r\n\r\n  const { orders } = useSelector((state) => state.allOrders);\r\n\r\n  let outOfStock = 0;\r\n\r\n  products &&\r\n    products.map((item) => {\r\n      if (item.countInStock === 0) {\r\n        outOfStock += 1;\r\n      }\r\n      return outOfStock;\r\n    });\r\n\r\n  let totalAmount = 0;\r\n  orders && orders.map((item) => (totalAmount += item.totalPrice));\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllProducts());\r\n    dispatch(getAllUsers());\r\n    dispatch(getAllOrders());\r\n  }, [dispatch]);\r\n  return (\r\n    <AdminContainer>\r\n      <div className=\"mb-4\">\r\n        <h2 className=\"text-muted\">Dashboard</h2>\r\n        <div className=\"dashboard-1 pt-2 text-center pb-2 text-white\">\r\n          Total Amount ${totalAmount}\r\n        </div>\r\n\r\n        <div className=\"dashboard-2  text-white m-3\">\r\n          <div className=\"dashboard-2-1 text-center p-5 m-1\">\r\n            {products && products.length} Products\r\n          </div>\r\n          <div className=\"dashboard-2-2 text-center p-5 m-1 \">\r\n            {orders && orders.length} Orders\r\n          </div>\r\n          <div className=\"dashboard-2-3 text-center p-5 m-1\">\r\n            {users && users.length} &nbsp;Users\r\n          </div>\r\n        </div>\r\n        <div className=\"dashboard-3-1 text-center text-white pt-2 pb-2\">\r\n          {outOfStock} Out of stock\r\n        </div>\r\n      </div>\r\n    </AdminContainer>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect } from \"react\";\r\nimport AdminContainer from \"./layout/AdminContainer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteProduct, getAllProducts } from \"../actions/productActions\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../components/shared/Loader\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { clearErrors } from \"../actions/userAction\";\r\nimport { DELETE_PRODUCT_RESET } from \"../constants/productConstant\";\r\nconst ProductList = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n  const { loading, error, products } = useSelector(\r\n    (state) => state.productList\r\n  );\r\n\r\n  const {\r\n    error: deleteError,\r\n    isDeleted,\r\n    message,\r\n  } = useSelector((state) => state.product);\r\n\r\n  const deleteProductHandler = (id) => {\r\n    dispatch(deleteProduct(id));\r\n  };\r\n  useEffect(() => {\r\n    if (isDeleted) {\r\n      alert.success(message);\r\n      history.push(\"/admin/dashboard\");\r\n      dispatch({ type: DELETE_PRODUCT_RESET });\r\n    }\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (deleteError) {\r\n      alert.error(deleteError);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    dispatch(getAllProducts());\r\n  }, [dispatch, history, isDeleted, error, deleteError, alert, message]);\r\n  return (\r\n    <AdminContainer>\r\n      <h2 className=\"text-muted\">All Products</h2>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Table\r\n          striped\r\n          bordered\r\n          hover\r\n          responsive\r\n          className=\"table-sm text-nowrap\"\r\n        >\r\n          <thead>\r\n            <tr className=\"table-info\">\r\n              <td>Product ID</td>\r\n              <td className=\"text-nowrap\">Name</td>\r\n              <td>Stock</td>\r\n              <td>Price</td>\r\n              <td>Actions</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products &&\r\n              products.map((product) => (\r\n                <tr\r\n                  key={product._id}\r\n                  className={product.countInStock === 0 ? \"text-danger\" : \"\"}\r\n                >\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.countInStock}</td>\r\n                  <td>{product.price}</td>\r\n                  <td>\r\n                    <Link to={`/admin/product/${product._id}`}>\r\n                      <i className=\"fa fa-edit\" aria-hidden=\"true\"></i>\r\n                    </Link>\r\n\r\n                    <button\r\n                      onClick={() => deleteProductHandler(product._id)}\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      style={{ border: \"none\" }}\r\n                      disabled={loading ? true : false}\r\n                    >\r\n                      <i\r\n                        className=\"fa fa-trash text-danger\"\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </AdminContainer>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AdminContainer from \"./layout/AdminContainer\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { clearErrors, createProduct } from \"../actions/productActions\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { NEW_PRODUCT_RESET } from \"../constants/productConstant\";\r\n\r\nconst NewProduct = ({ history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [countInStock, setcountInStock] = useState(0);\r\n  const [image, setImage] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  const { loading, error, success } = useSelector((state) => state.newProduct);\r\n\r\n  const categories = [\r\n    \"Electronics\",\r\n    \"Laptop\",\r\n    \"Footwear\",\r\n    \"Bottom\",\r\n    \"Tops\",\r\n    \"Attire\",\r\n    \"Camera\",\r\n    \"SmartPhones\",\r\n  ];\r\n\r\n  const createProductSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createProduct({\r\n        name,\r\n        price,\r\n        description,\r\n        category,\r\n        brand,\r\n        countInStock,\r\n        image,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (success) {\r\n      alert.success(\"Product created successfully\");\r\n      history.push(\"/admin/dashboard\");\r\n      dispatch({ type: NEW_PRODUCT_RESET });\r\n    }\r\n  }, [dispatch, error, history, success, alert]);\r\n\r\n  return (\r\n    <AdminContainer>\r\n      <Row className=\"justify-content-md-center m-3\">\r\n        <Col md={4} className=\"mybox-shadow p-3\">\r\n          <h2 className=\"text-muted text-center\">Create Product</h2>\r\n          <Form onSubmit={createProductSubmitHandler} className=\"newproduct\">\r\n            <Form.Group controlId=\"productname\">\r\n              <i className=\"fa-solid fa-spell-check icon\"></i>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Product name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"price\">\r\n              <i className=\"fa-solid fa-dollar-sign icon\"></i>\r\n              <Form.Control\r\n                type=\"Number\"\r\n                placeholder=\"Price\"\r\n                onChange={(e) => setPrice(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"stock\">\r\n              <i className=\"fa-solid fa-warehouse icon\"></i>\r\n              <Form.Control\r\n                type=\"Number\"\r\n                placeholder=\"Stock\"\r\n                onChange={(e) => setcountInStock(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"description\">\r\n              <i className=\"fa-regular fa-note-sticky icon\"></i>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                placeholder=\"Product Description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                rows={1}\r\n                cols={30}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"category\">\r\n              <i className=\"fa-solid fa-list icon\"></i>\r\n              <Form.Control\r\n                as=\"select\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\">Choose Category</option>\r\n                {categories.map((category) => (\r\n                  <option key={category} value={category}>\r\n                    {category}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"brand\">\r\n              <i className=\"fa-regular fa-copyright icon\"></i>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Product Brand\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"image\">\r\n              <i className=\"fa-regular fa-image icon\"></i>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Image path\"\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              disabled={loading ? true : false}\r\n              className=\"btn-block\"\r\n            >\r\n              Create Product\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </AdminContainer>\r\n  );\r\n};\r\n\r\nexport default NewProduct;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AdminContainer from \"./layout/AdminContainer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport {\r\n  clearErrors,\r\n  listProductDetails,\r\n  updateProduct,\r\n} from \"../actions/productActions\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { UPDATE_PRODUCT_RESET } from \"../constants/productConstant\";\r\n\r\nconst UpdateProduct = ({ history, match }) => {\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  const { error, product } = useSelector((state) => state.productDetails);\r\n\r\n  const {\r\n    loading,\r\n    error: updateError,\r\n    isUpdated,\r\n  } = useSelector((state) => state.product);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n\r\n  const categories = [\r\n    \"Laptop\",\r\n    \"Footwear\",\r\n    \"Bottom\",\r\n    \"Electronics\",\r\n    \"Tops\",\r\n    \"Attire\",\r\n    \"Camera\",\r\n    \"SmartPhones\",\r\n  ];\r\n\r\n  const updateProductSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct(productId, {\r\n        name,\r\n        price,\r\n        description,\r\n        countInStock,\r\n        brand,\r\n        category,\r\n        image,\r\n      })\r\n    );\r\n  };\r\n\r\n  const productId = match.params.id;\r\n\r\n  useEffect(() => {\r\n    if (product && product._id !== productId) {\r\n      dispatch(listProductDetails(productId));\r\n    } else {\r\n      setName(product.name);\r\n      setPrice(product.price);\r\n      setBrand(product.brand);\r\n      setDescription(product.description);\r\n      setCountInStock(product.countInStock);\r\n      setCategory(product.category);\r\n      setImage(product.image);\r\n    }\r\n    if (updateError) {\r\n      alert.error(updateError);\r\n      dispatch(clearErrors());\r\n    }\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n    if (isUpdated) {\r\n      alert.success(\"Product updated succcesfully\");\r\n      history.push(\"/admin/products\");\r\n      dispatch({ type: UPDATE_PRODUCT_RESET });\r\n    }\r\n  }, [\r\n    dispatch,\r\n    alert,\r\n    error,\r\n    history,\r\n    isUpdated,\r\n    productId,\r\n    product,\r\n    updateError,\r\n  ]);\r\n  return (\r\n    <AdminContainer>\r\n      <Row className=\"justify-content-md-center m-3 h-500 align-items-md-center\">\r\n        <Col md={4} className=\"mybox-shadow p-3\">\r\n          <h2 className=\"text-muted text-center\">Update Product</h2>\r\n          <Form\r\n            onSubmit={updateProductSubmitHandler}\r\n            className=\"update-product\"\r\n          >\r\n            <Form.Group controlId=\"productname\">\r\n              <i className=\"fa-solid fa-spell-check icon\"></i>\r\n\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Product name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"price\">\r\n              <i className=\"fa-solid fa-dollar-sign icon\"></i>\r\n              <Form.Control\r\n                type=\"Number\"\r\n                placeholder=\"Price\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"countInStock\">\r\n              <i className=\"fa-solid fa-warehouse icon\"></i>\r\n\r\n              <Form.Control\r\n                type=\"Number\"\r\n                value={countInStock}\r\n                placeholder=\"Stock\"\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"description\">\r\n              <i className=\"fa-regular fa-note-sticky icon\"></i>\r\n\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                placeholder=\"Product Description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                rows={1}\r\n                cols={30}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"category\">\r\n              <i className=\"fa-solid fa-list icon\"></i>\r\n\r\n              <Form.Control\r\n                as=\"select\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\">Choose Category</option>\r\n                {categories.map((category) => (\r\n                  <option key={category} value={category}>\r\n                    {category}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"brand\">\r\n              <i className=\"fa-regular fa-copyright icon\"></i>\r\n\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Product Brand\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"image\">\r\n              <i className=\"fa-regular fa-image icon\"></i>\r\n\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Product Image\"\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              disabled={loading ? true : false}\r\n              className=\"btn-block\"\r\n            >\r\n              Update Product\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </AdminContainer>\r\n  );\r\n};\r\n\r\nexport default UpdateProduct;\r\n","import React, { useEffect } from \"react\";\r\nimport AdminContainer from \"./layout/AdminContainer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { clearErrors, deleteUser, getAllUsers } from \"../actions/userAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport Loader from \"../components/shared/Loader\";\r\nimport { DELETE_USER_RESET } from \"../constants/userConstants\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst UsersList = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n  const { loading, users, error } = useSelector((state) => state.listUser);\r\n  const {\r\n    isDeleted,\r\n    message,\r\n    error: deleteError,\r\n  } = useSelector((state) => state.userUpdateProfile);\r\n\r\n  const deleteUserHandler = (id) => {\r\n    dispatch(deleteUser(id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n    if (isDeleted) {\r\n      alert.success(message);\r\n      history.push(\"/admin/users\");\r\n      dispatch({ type: DELETE_USER_RESET });\r\n    }\r\n    if (deleteError) {\r\n      alert.error(deleteError);\r\n      dispatch(clearErrors());\r\n    }\r\n    dispatch(getAllUsers());\r\n  }, [dispatch, isDeleted, error, deleteError, history, message, alert]);\r\n\r\n  return (\r\n    <AdminContainer>\r\n      <h2 className=\"text-muted\">All User</h2>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr className=\"table-info\">\r\n              <td>User ID</td>\r\n              <td>Name</td>\r\n              <td>Email</td>\r\n              <td className=\"text-nowrap\">User Type</td>\r\n              <td>Actions</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users &&\r\n              users.map((user) => (\r\n                <tr key={user._id}>\r\n                  <td>{user._id}</td>\r\n                  <td>{user.name}</td>\r\n                  <td>{user.email}</td>\r\n                  <td>{user.role}</td>\r\n\r\n                  <td>\r\n                    <Link to={`/admin/user/${user._id}`}>\r\n                      <i className=\"fa fa-edit\" aria-hidden=\"true\"></i>\r\n                    </Link>\r\n\r\n                    <button\r\n                      onClick={() => deleteUserHandler(user._id)}\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      style={{ border: \"none\" }}\r\n                    >\r\n                      <i\r\n                        className=\"fa fa-trash text-danger\"\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </AdminContainer>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AdminContainer from \"./layout/AdminContainer\";\r\nimport { Button, Form, Row, Col, Table } from \"react-bootstrap\";\r\nimport {\r\n  clearErrors,\r\n  deleteReviews,\r\n  getAllReviews,\r\n} from \"../actions/productActions\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Loader from \"../components/shared/Loader\";\r\nimport { DELETE_REVIEW_RESET } from \"../constants/productConstant\";\r\n\r\nconst ProductReviews = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const [productId, setProductId] = useState(\"\");\r\n\r\n  const alert = useAlert();\r\n\r\n  const { error, loading, reviews } = useSelector(\r\n    (state) => state.productReviews\r\n  );\r\n\r\n  const {\r\n    isDeleted,\r\n    error: deleteError,\r\n    message,\r\n  } = useSelector((state) => state.review);\r\n\r\n  const getReviewsSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(getAllReviews(productId));\r\n  };\r\n\r\n  const deleteReviewHandler = (reviewId, productId) => {\r\n    dispatch(deleteReviews(reviewId, productId));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (productId.length === 24) {\r\n      dispatch(getAllReviews(productId));\r\n    }\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n    if (deleteError) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n    if (isDeleted) {\r\n      alert.success(message);\r\n      history.push(\"/admin/reviews\");\r\n      dispatch({ type: DELETE_REVIEW_RESET });\r\n    }\r\n  }, [\r\n    dispatch,\r\n    error,\r\n    alert,\r\n    isDeleted,\r\n    deleteError,\r\n    history,\r\n    message,\r\n    productId,\r\n  ]);\r\n  return (\r\n    <>\r\n      <AdminContainer>\r\n        <Row className=\"justify-content-md-center mb-2\">\r\n          <Col md={3}>\r\n            <Form onSubmit={getReviewsSubmitHandler} className=\"product-review\">\r\n              <Form.Group controlId=\"productId\">\r\n                <i className=\"fa-solid fa-star icon text-warning\"></i>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={productId}\r\n                  onChange={(e) => setProductId(e.target.value)}\r\n                  placeholder=\"Product Id\"\r\n                />\r\n              </Form.Group>\r\n              <Button type=\"submit\" disabled={loading || productId === \"\"}>\r\n                Search\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            {loading ? (\r\n              <Loader />\r\n            ) : (\r\n              <Table striped bordered hover responsive className=\"table-sm\">\r\n                <thead>\r\n                  <tr className=\"table-info text-nowrap\">\r\n                    <td>ID</td>\r\n                    <td>User Name</td>\r\n                    <td>Ratings</td>\r\n                    <td>Comment</td>\r\n                    <td>Actions</td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {reviews && reviews.length > 0 ? (\r\n                    reviews.map((review) => (\r\n                      <tr key={review._id}>\r\n                        <td>{review._id}</td>\r\n                        <td>{review.name}</td>\r\n                        <td>{review.rating}</td>\r\n                        <td>{review.comment}</td>\r\n                        <td>\r\n                          <button\r\n                            onClick={() =>\r\n                              deleteReviewHandler(review._id, productId)\r\n                            }\r\n                            type=\"button\"\r\n                            variant=\"light\"\r\n                            style={{ border: \"none\" }}\r\n                          >\r\n                            <i\r\n                              className=\"fa fa-trash text-danger\"\r\n                              aria-hidden=\"true\"\r\n                            ></i>\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr className=\"text-light bg-warning text-center\">\r\n                      <td colSpan={5}>No Review Found</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </Table>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </AdminContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductReviews;\r\n","import React, { useEffect } from \"react\";\r\nimport AdminContainer from \"./layout/AdminContainer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  clearErrors,\r\n  deleteOrder,\r\n  getAllOrders,\r\n} from \"../actions/orderActions\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport Loader from \"../components/shared/Loader\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { DELETE_ORDER_RESET } from \"../constants/orderConstants\";\r\n\r\nconst OrderList = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  const { loading, error, orders } = useSelector((state) => state.allOrders);\r\n\r\n  const {\r\n    error: deleteError,\r\n    isDeleted,\r\n    message,\r\n  } = useSelector((state) => state.order);\r\n\r\n  const deleteOrderHandler = (id) => {\r\n    dispatch(deleteOrder(id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (deleteError) {\r\n      alert.error(deleteError);\r\n      dispatch(clearErrors());\r\n    }\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n    if (isDeleted) {\r\n      alert.success(message);\r\n      history.push(\"/admin/orders\");\r\n      dispatch({ type: DELETE_ORDER_RESET });\r\n    }\r\n    dispatch(getAllOrders());\r\n  }, [dispatch, isDeleted, deleteError, error, alert, history, message]);\r\n\r\n  return (\r\n    <AdminContainer>\r\n      <h2 className=\"text-muted\">All Orders</h2>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr className=\"table-info text-nowrap\">\r\n              <td>Order ID</td>\r\n              <td>Amount</td>\r\n              <td>Items Qty</td>\r\n              <td>Status</td>\r\n              <td>Actions</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders &&\r\n              orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>{order.orderItems.length}</td>\r\n                  <td>\r\n                    <div\r\n                      className={`\r\n                      ${\r\n                        order.orderStatus === \"Processing\"\r\n                          ? \"text-success\"\r\n                          : \"text-primary\"\r\n                      }\r\n                    ${order.orderStatus === \"Delivered\" ? \"text-danger\" : \"\"}\r\n                    `}\r\n                    >\r\n                      {order.orderStatus}\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    <Link to={`/admin/order/${order._id}`}>\r\n                      <i className=\"fa fa-edit\" aria-hidden=\"true\"></i>\r\n                    </Link>\r\n\r\n                    <button\r\n                      onClick={() => deleteOrderHandler(order._id)}\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      style={{ border: \"none\" }}\r\n                    >\r\n                      <i\r\n                        className=\"fa fa-trash text-danger\"\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </AdminContainer>\r\n  );\r\n};\r\n\r\nexport default OrderList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AdminContainer from \"./layout/AdminContainer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  clearErrors,\r\n  getOrderDetails,\r\n  updateOrder,\r\n} from \"../actions/orderActions\";\r\nimport { Button, Form, Image, Col, Row, ListGroup } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../components/shared/Loader\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { UPDATE_ORDER_RESET } from \"../constants/orderConstants\";\r\nimport Message from \"../components/shared/Message\";\r\n\r\nconst ProcessOrder = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n  const [status, setStatus] = useState(\"\");\r\n  const [isDelivered, setIsDelivered] = useState(false);\r\n\r\n  const { loading, error, order } = useSelector((state) => state.orderDetails);\r\n\r\n  const { error: updateError, isUpdated } = useSelector((state) => state.order);\r\n\r\n  const orderId = match.params.id;\r\n\r\n  const processOrderSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (status === \"Delivered\") {\r\n      setIsDelivered(true);\r\n    }\r\n    dispatch(updateOrder(orderId, { isDelivered, status }));\r\n    setStatus(\"\");\r\n  };\r\n\r\n  if (!loading) {\r\n    order.itemsPrice =\r\n      order.orderItems &&\r\n      order.orderItems\r\n        .reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        .toFixed(2);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (updateError) {\r\n      alert.error(updateError);\r\n      dispatch(clearErrors());\r\n    }\r\n    if (isUpdated) {\r\n      alert.success(\"Order Updated Successfully\");\r\n      dispatch({ type: UPDATE_ORDER_RESET });\r\n    }\r\n    dispatch(getOrderDetails(orderId));\r\n  }, [dispatch, alert, error, orderId, isUpdated, updateError]);\r\n  return (\r\n    <AdminContainer>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <Row className=\"py-3 mb-2\">\r\n            <Col md={7}>\r\n              <ListGroup variant=\"flush\" className=\"mybox-shadow\">\r\n                <ListGroup.Item>\r\n                  <h4 className=\"text-muted text-break\">\r\n                    OrderId #<b>{order && orderId}</b>\r\n                  </h4>\r\n                </ListGroup.Item>\r\n                {order.shippingAddress && (\r\n                  <ListGroup.Item>\r\n                    <h4 className=\"text-muted\">Shipping Info</h4>\r\n                    <address>\r\n                      <p>\r\n                        <strong>Name:&nbsp;</strong>\r\n                        <span>{order.user && order.user.name}</span>\r\n                      </p>\r\n                      <p>\r\n                        <strong>Email:&nbsp;</strong>\r\n                        <span> {order.user && order.user.email}</span>\r\n                      </p>\r\n                      <p>\r\n                        <strong>Address:&nbsp;</strong>\r\n                        {order.shippingAddress && (\r\n                          <span>\r\n                            {order.shippingAddress.address}&nbsp;\r\n                            {order.shippingAddress.city}&nbsp;\r\n                            {order.shippingAddress.postalCode}&nbsp;\r\n                            {order.shippingAddress.country}&nbsp;, phone:{\" \"}\r\n                            {order.shippingAddress.mobileNo}&nbsp;\r\n                          </span>\r\n                        )}\r\n                      </p>\r\n                    </address>\r\n                  </ListGroup.Item>\r\n                )}\r\n                <ListGroup.Item>\r\n                  <div>\r\n                    Status:&nbsp;\r\n                    <span\r\n                      className={\r\n                        order.orderStatus === \"Delivered\"\r\n                          ? \"text-danger\"\r\n                          : \"text-success\"\r\n                      }\r\n                    >\r\n                      {order.orderStatus}\r\n                    </span>\r\n                  </div>\r\n                  {order.orderStatus === \"Delivered\" ? (\r\n                    <div>\r\n                      {\" \"}\r\n                      Delivered At {order.deliveredAt.substring(0, 10)}\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <h4 className=\"text-muted\">Payment Info</h4>\r\n                  <p>\r\n                    <strong>\r\n                      Paid Amount:&nbsp;${order.totalPrice}\r\n                      <span>&nbsp; | &nbsp;</span>\r\n                      {order.paymentMethod}\r\n                    </strong>\r\n                  </p>\r\n                  {order.isPaid ? (\r\n                    <Message variant=\"success\">\r\n                      <i className=\"fa-solid fa-circle-check\"></i>&nbsp; Paid On{\" \"}\r\n                      {order.paidAt.substring(0, 10)}\r\n                    </Message>\r\n                  ) : (\r\n                    <Message variant=\"danger\">Not Paid</Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <h4 className=\"text-muted\">\r\n                    {order.orderItems && order.orderItems.length === 1\r\n                      ? \"Order Item\"\r\n                      : \"Order Items\"}{\" \"}\r\n                  </h4>\r\n\r\n                  <ListGroup variant=\"flush\">\r\n                    {order.orderItems &&\r\n                      order.orderItems.map((item) => (\r\n                        <ListGroup.Item key={item.product}>\r\n                          <Row>\r\n                            <Col md={2}>\r\n                              <Image\r\n                                src={item.image}\r\n                                alt={item.name}\r\n                                fluid\r\n                              ></Image>\r\n                            </Col>\r\n                            <Col>\r\n                              <Link\r\n                                to={`/product/${item.product}`}\r\n                                className=\"link-styles text-body\"\r\n                              >\r\n                                {item.name}\r\n                              </Link>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                              {\" \"}\r\n                              {item.qty} X ${item.price}=\r\n                              <b>${(item.qty * item.price).toFixed(2)}</b>\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                  </ListGroup>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={4} className=\"my-md-0 my-3\">\r\n              <ListGroup variant=\"flush\" className=\"mybox-shadow\">\r\n                <ListGroup.Item>\r\n                  <h4 className=\"text-muted\">Order Summary</h4>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Subtotal</Col>\r\n                    <Col>$ {order.itemsPrice}</Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>Shipping</Col>\r\n                    <Col>$ {order.shippingPrice}</Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>Tax</Col>\r\n                    <Col>$ {order.taxPrice}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Total</Col>\r\n                    <Col>\r\n                      <b>$ {order.totalPrice}</b>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n              <ListGroup variant=\"flush\" className=\"mybox-shadow my-3 mt-4\">\r\n                <ListGroup.Item>\r\n                  <h4 className=\"text-muted\">Process Order</h4>\r\n\r\n                  <Form\r\n                    onSubmit={processOrderSubmitHandler}\r\n                    className={\r\n                      order.orderStatus === \"Delivered\"\r\n                        ? \"d-none\"\r\n                        : \"d-block my-3\"\r\n                    }\r\n                  >\r\n                    <Form.Group controlId=\"process-order\">\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        onChange={(e) => setStatus(e.target.value)}\r\n                        value={status}\r\n                      >\r\n                        <option value=\"\">Choose Status</option>\r\n                        {order && order.orderStatus === \"Processing\" && (\r\n                          <option value=\"Shipped\">Shipped</option>\r\n                        )}\r\n                        {order && order.orderStatus === \"Shipped\" && (\r\n                          <option value=\"Delivered\">Delivered</option>\r\n                        )}\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      disabled={\r\n                        loading ? true : false || status === \"\" ? true : false\r\n                      }\r\n                    >\r\n                      Process\r\n                    </Button>\r\n                  </Form>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </AdminContainer>\r\n  );\r\n};\r\n\r\nexport default ProcessOrder;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AdminContainer from \"./layout/AdminContainer\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { clearErrors, getSingleUser, updateUser } from \"../actions/userAction\";\r\nimport Loader from \"../components/shared/Loader\";\r\nimport { UPDATE_USER_RESET } from \"../constants/userConstants\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst UpdateUser = ({ history, match }) => {\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  const { loading, error, user } = useSelector((state) => state.singleUser);\r\n\r\n  const {\r\n    loading: updateLoading,\r\n    error: updateError,\r\n    isUpdated,\r\n  } = useSelector((state) => state.userUpdateProfile);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n\r\n  const userId = match.params.id;\r\n\r\n  const updateUserSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser(userId, { name, email, role }));\r\n  };\r\n  useEffect(() => {\r\n    if (user && user._id !== userId) {\r\n      dispatch(getSingleUser(userId));\r\n    } else {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setRole(user.role);\r\n    }\r\n    if (updateError) {\r\n      alert.error(updateError);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (isUpdated) {\r\n      alert.success(\"User updated successfully\");\r\n      history.push(\"/admin/users\");\r\n      dispatch({ type: UPDATE_USER_RESET });\r\n    }\r\n  }, [dispatch, user, userId, error, updateError, isUpdated, alert, history]);\r\n  return (\r\n    <AdminContainer>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Row className=\"justify-content-md-center  align-items-md-center m-3 h-500\">\r\n          <Col md={4} className=\"mybox-shadow p-3\">\r\n            <h2 className=\"text-center text-muted\">Update User</h2>\r\n            <Form onSubmit={updateUserSubmitHandler} className=\"update-user\">\r\n              <Form.Group controlId=\"name\">\r\n                <i className=\"fa-solid fa-person icon\"></i>\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  placeholder=\"Enter name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"email\">\r\n                <i className=\"fa-solid fa-envelope icon\"></i>\r\n                <Form.Control\r\n                  required\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"role\">\r\n                <i className=\"fa-solid fa-user-check icon\"></i>\r\n\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={role}\r\n                  onChange={(e) => setRole(e.target.value)}\r\n                >\r\n                  <option value=\"\">Choose Role</option>\r\n                  <option value=\"Admin\">Admin</option>\r\n                  <option value=\"User\">User</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"primary\"\r\n                disabled={updateLoading}\r\n                className=\"btn-block\"\r\n              >\r\n                Update\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </AdminContainer>\r\n  );\r\n};\r\n\r\nexport default UpdateUser;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const AdminRoute = ({ component: Component, ...rest }) => {\r\n  const { loading, user, isAuthenticated } = useSelector((state) => state.user);\r\n  const { role } = user || {};\r\n  return (\r\n    <>\r\n      {loading === false && (\r\n        <Route\r\n          {...rest}\r\n          render={(props) => {\r\n            if (isAuthenticated === false && role !== \"Admin\") {\r\n              return <Redirect to=\"/login\" />;\r\n            }\r\n\r\n            return <Component {...props} />;\r\n          }}\r\n        ></Route>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  const { loading, isAuthenticated } = useSelector((state) => state.user);\r\n  return (\r\n    <>\r\n      {loading === false && (\r\n        <Route\r\n          {...rest}\r\n          render={(props) => {\r\n            if (isAuthenticated === false) {\r\n              return <Redirect to=\"/login\" />;\r\n            }\r\n            return <Component {...props} />;\r\n          }}\r\n        ></Route>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  clearErrors,\r\n  getUserDetails,\r\n  updateProfile,\r\n} from \"../actions/userAction\";\r\nimport FormContainer from \"../components/shared/FormContainer\";\r\nimport { Form, Button, Image } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/shared/Loader\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\n\r\nconst UpdateProfile = ({ history }) => {\r\n  const { error, user, loading } = useSelector((state) => state.user);\r\n  const {\r\n    loading: updateLoading,\r\n    error: updateError,\r\n    isUpdated,\r\n  } = useSelector((state) => state.userUpdateProfile);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [avatarPreview, setAvatarPreview] = useState(\"/Profile.png\");\r\n\r\n  const profileImageSubmitHandler = (e) => {\r\n    const reader = new FileReader();\r\n    console.log(e.target.files[0]);\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setAvatar(reader.result);\r\n        setAvatarPreview(reader.result);\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n\r\n  const updateProfileSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateProfile({ id: user._id, name, email, password, avatar }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setAvatarPreview(user.avatar.url);\r\n    }\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (updateError) {\r\n      alert.error(updateError);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (isUpdated) {\r\n      alert.success(\"Profile updated successfully\");\r\n      dispatch(getUserDetails(\"profile\"));\r\n      history.push(\"/profile\");\r\n      dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n    }\r\n  }, [dispatch, isUpdated, error, user, updateError, history, alert]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <FormContainer title=\"Update profile\">\r\n          <Form\r\n            onSubmit={updateProfileSubmitHandler}\r\n            className=\"update-profile\"\r\n          >\r\n            <Form.Group controlId=\"name\">\r\n              <i className=\"fa-regular fa-face-smile icon\"></i>\r\n\r\n              <Form.Control\r\n                type=\"text\"\r\n                required\r\n                placeholder=\"Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <i className=\"fa-solid fa-envelope icon\"></i>\r\n\r\n              <Form.Control\r\n                type=\"email\"\r\n                required\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <i className=\"fa-solid fa-lock icon\"></i>\r\n\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"confirmPassword\">\r\n              <i className=\"fa-solid fa-check icon\"></i>\r\n\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Re-enter password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"avatar\" className=\"profile-pic\">\r\n              <Image\r\n                src={avatarPreview}\r\n                fluid\r\n                className=\"profile-img\"\r\n                alt=\"avatar preview\"\r\n              />\r\n              <Form.Control\r\n                type=\"file\"\r\n                name=\"avatar\"\r\n                accept=\"image/*\"\r\n                onChange={profileImageSubmitHandler}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"primary\"\r\n              className=\"btn-block\"\r\n              disabled={updateLoading}\r\n            >\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </FormContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;\r\n","import React from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Success = () => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center align-items-center h-500\">\r\n        <Col md={4} className=\"text-center\">\r\n          <div>\r\n            <i className=\"fa-solid fa-circle-check text-success\"></i>\r\n          </div>\r\n          <div>\r\n            <b className=\"text-success\">\r\n              Your Order has been Placed successfully{\" \"}\r\n            </b>\r\n          </div>\r\n\r\n          <Link to=\"/myorders\">\r\n            <span className=\"link-styles text-body\">View Orders</span>\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Success;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, ListGroup, Image, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { clearErrors, getOrderDetails } from \"../actions/orderActions\";\r\nimport Message from \"../components/shared/Message\";\r\nimport Loader from \"../components/shared/Loader\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst OrderDetailsScreen = ({ match }) => {\r\n  const { order, loading, error } = useSelector((state) => state.orderDetails);\r\n\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  const orderId = match.params.id;\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    dispatch(getOrderDetails(orderId));\r\n  }, [dispatch, orderId, error, alert]);\r\n  if (!loading) {\r\n    order.itemsPrice =\r\n      order.orderItems &&\r\n      order.orderItems\r\n        .reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        .toFixed(2);\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <Container>\r\n      <h2 className=\"text-muted text-center\">Order Details</h2>\r\n      <Row className=\"mb-5 mt-3\">\r\n        <Col md={7}>\r\n          <ListGroup variant=\"flush\" className=\"mybox-shadow\">\r\n            <ListGroup.Item>\r\n              <h4 className=\"text-muted text-break\">\r\n                OrderId #<b>{order && orderId}</b>\r\n              </h4>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h4 className=\"text-muted\">Shipping Info</h4>\r\n              <address>\r\n                <p>\r\n                  <strong>Name:&nbsp;</strong>\r\n                  <span>{order.user && order.user.name}</span>\r\n                </p>\r\n                <p>\r\n                  <strong>Email:&nbsp;</strong>\r\n                  <span> {order.user && order.user.email}</span>\r\n                </p>\r\n                <p>\r\n                  <strong>Address:&nbsp;</strong>\r\n                  {order.shippingAddress && (\r\n                    <span>\r\n                      {order.shippingAddress.address}&nbsp;\r\n                      {order.shippingAddress.city}&nbsp;\r\n                      {order.shippingAddress.postalCode}&nbsp;\r\n                      {order.shippingAddress.country}&nbsp; phone: &nbsp;\r\n                      {order.shippingAddress.mobileNo}&nbsp;\r\n                    </span>\r\n                  )}\r\n                </p>\r\n              </address>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Message\r\n                variant={\r\n                  order.orderStatus === \"Delivered\" ? \"danger\" : \"primary\"\r\n                }\r\n              >\r\n                <em>\r\n                  Status- <b>{order.orderStatus && order.orderStatus}</b>\r\n                </em>\r\n                {order.orderStatus === \"Delivered\" && (\r\n                  <span>\r\n                    {\" \"}\r\n                    Delivered At {order.deliveredAt.substring(0, 10)}\r\n                  </span>\r\n                )}\r\n              </Message>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h4 className=\"text-muted\">Payment Info</h4>\r\n              <p>\r\n                <strong>\r\n                  Paid Amount:&nbsp;${order.totalPrice}\r\n                  <span>&nbsp; | &nbsp;</span>\r\n                  {order.paymentMethod}\r\n                </strong>\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">\r\n                  <i className=\"fa-solid fa-circle-check\"></i>&nbsp; Paid On{\" \"}\r\n                  {order.paidAt.substring(0, 10)}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h4 className=\"text-muted\">\r\n                {order.orderItems && order.orderItems.length === 1\r\n                  ? \"Order Item\"\r\n                  : \"Order Items\"}{\" \"}\r\n              </h4>\r\n              {order.orderItems && (\r\n                <ListGroup variant=\"flush\" className=\"mybox-shadow\">\r\n                  {order.orderItems &&\r\n                    order.orderItems.map((item) => (\r\n                      <ListGroup.Item key={item.product}>\r\n                        <Row>\r\n                          <Col md={2}>\r\n                            <Image\r\n                              src={item.image}\r\n                              alt={item.name}\r\n                              fluid\r\n                            ></Image>\r\n                          </Col>\r\n                          <Col>\r\n                            <Link\r\n                              to={`/product/${item.product}`}\r\n                              className=\"link-styles text-body\"\r\n                            >\r\n                              {item.name}\r\n                            </Link>\r\n                          </Col>\r\n                          <Col md={4}>\r\n                            {\" \"}\r\n                            {item.qty} X ${item.price} =\r\n                            <b>${(item.qty * item.price).toFixed(2)}</b>\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4} className=\"mt-sm-2 mt-md-0\">\r\n          <ListGroup variant=\"flush\" className=\"mybox-shadow\">\r\n            <ListGroup.Item>\r\n              <h4 className=\"text-muted\">Order Summary</h4>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Row>\r\n                <Col>Subtotal</Col>\r\n                <Col>${order.itemsPrice}</Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>Shipping</Col>\r\n                <Col>${order.shippingPrice}</Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>Tax</Col>\r\n                <Col>${order.taxPrice}</Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Row>\r\n                <Col>Total</Col>\r\n                <Col>\r\n                  <b>${order.totalPrice}</b>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OrderDetailsScreen;\r\n","import React from \"react\";\r\nimport { Card, Col, Container, Row } from \"react-bootstrap\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        {/* your image in side */}\r\n        <Col md={12}>\r\n          <h2 className=\"text-center text-muted\">About Us</h2>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"aboutSectionGradient p-3 text-light text-justify\">\r\n            <p className=\"text-light bg-success d-inline-block\">\r\n              Welcome to <b>Wys</b> ecommerce site, your premier destination for\r\n              online shopping !\r\n            </p>\r\n            <br />\r\n            At Wys, we're dedicated to redefining your shopping experience by\r\n            offering a vast selection of high-quality products, exceptional\r\n            customer service, and unparalleled convenience, all at your\r\n            fingertips.\r\n            <div className=\"text-right\">\r\n              <span>@ Founder</span>\r\n              <br />\r\n              <span>Rajesh Kumar</span>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"my-5\">\r\n        <Col md={4}>\r\n          <Card className=\"mybox-shadow text-center my-2 pt-2\">\r\n            <Card.Text>\r\n              <i className=\"fa-regular fa-eye text-primary\"></i>\r\n            </Card.Text>\r\n            <Card.Title className=\"text-primary\">Vision</Card.Title>\r\n            <Card.Body className=\"text-justify\">\r\n              \"Our vision is to revolutionize the way people shop online by\r\n              providing a <b>seamless</b>, <b>personalized</b>, and{\" \"}\r\n              <b>convenient</b> shopping experience. We envision a future where\r\n              customers can easily discover and purchase products they love,\r\n              while fostering a vibrant online community centered around shared\r\n              interests and passions.\"\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={4}>\r\n          {\" \"}\r\n          <Card className=\"mybox-shadow text-center my-2 pt-2\">\r\n            <Card.Text>\r\n              <i className=\"fa-solid fa-bullseye text-success\"></i>\r\n            </Card.Text>\r\n            <Card.Title className=\"text-success\">Mission</Card.Title>\r\n            <Card.Body className=\"text-justify\">\r\n              \"We strive to offer high-quality products at competitive prices,\r\n              ensuring our customers receive the best value for their money.\"\r\n              <br />\r\n              \"We believe in empowering customers with a wide selection of\r\n              products across various categories, catering to diverse tastes and\r\n              preferences.We embrace <b>innovation</b> and leverage emerging\r\n              technologies to enhance the shopping experience\"\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card className=\"mybox-shadow text-center my-2 pt-2\">\r\n            <Card.Text>\r\n              <i className=\"fa-solid fa-trophy text-warning\"></i>\r\n            </Card.Text>\r\n            <Card.Title className=\"text-warning\">Achievment</Card.Title>\r\n            <Card.Body className=\"text-justify\">\r\n              \" Our commitment to exceptional customer service has resulted in\r\n              consistently high customer <b>satisfaction</b> ratings and\r\n              positive reviews.\"\r\n              <br />\" Our e-commerce platform has expanded its reach to serve\r\n              customers worldwide, establishing partnerships with international\r\n              suppliers and optimizing logistics for efficient global shipping.\"\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useState } from \"react\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\n\r\nconst Contact = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const alert = useAlert();\r\n\r\n  const handleUserMessage = (e) => {\r\n    e.preventDefault();\r\n    alert.success(\"Message sent\");\r\n    console.log(name, email, message);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <h2 className=\"text-muted text-center\">Contact Us</h2>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col md={10} className=\"my-2\">\r\n          <Row className=\"justify-content-md-around \">\r\n            <Col md={4}>\r\n              <div className=\"bg-primary px-5 py-2 my3 text-light text-center\">\r\n                <i className=\"bi bi-telephone\"></i>\r\n                <br />\r\n                <span>+91 620310000</span>\r\n              </div>\r\n            </Col>\r\n            <Col md={4}>\r\n              <div className=\"bg-success   py-1 my3 text-light text-center\">\r\n                <i className=\"bi bi-envelope\"></i>\r\n                <br />\r\n                <a className=\"\" href=\"mailto:singhrajesh84657@gmail.com\">\r\n                  <Button className=\"bg-success border-0\">\r\n                    singhrajesh84657@gmail.com\r\n                  </Button>\r\n                </a>\r\n              </div>\r\n            </Col>\r\n            <Col md={4}>\r\n              <div className=\"bg-dark text-light px-5  py-2 my3 text-light text-center\">\r\n                <i className=\"bi bi-geo-alt-fill\"></i>\r\n\r\n                {/* <span>Address</span> */}\r\n                <br />\r\n\r\n                <div>Bihar, India</div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col md={10} className=\"my-2\">\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md={5}>\r\n              <Form\r\n                onSubmit={handleUserMessage}\r\n                className=\"contact-form mybox-shadow py-3 px-5 rounded-2\"\r\n              >\r\n                <h3 className=\"text-muted\">Get in touch</h3>\r\n\r\n                <Form.Group id=\"name\">\r\n                  <i className=\"fa-solid fa-spell-check icon\"></i>\r\n                  <Form.Control\r\n                    type=\"input\"\r\n                    placeholder=\"Name\"\r\n                    value={name}\r\n                    required\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group id=\"email\">\r\n                  <i className=\"fa-solid fa-envelope icon\"></i>\r\n\r\n                  <Form.Control\r\n                    type=\"input\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    required\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group id=\"message\">\r\n                  <i className=\"fa-solid fa-message icon\"></i>\r\n\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={3}\r\n                    cols={30}\r\n                    placeholder=\"Message\"\r\n                    value={message}\r\n                    required\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n                <Button type=\"submit\">Send message</Button>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col md={10} className=\"my-2\">\r\n          <div>\r\n            <div>Contact me on: </div>\r\n            <a\r\n              href=\"https://www.linkedin.com/\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              className=\"text-primary m-1 \"\r\n            >\r\n              <i className=\"bi bi-linkedin\"></i>\r\n            </a>\r\n            <a\r\n              href=\"https://www.github.com/\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              className=\"text-dark m-1\"\r\n            >\r\n              <i className=\"bi bi-github\"></i>\r\n            </a>\r\n            <a\r\n              href=\"https://www.facebook.com/\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              className=\"text-primary m-1\"\r\n            >\r\n              <i className=\"bi bi-facebook\"></i>\r\n            </a>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center align-items-center h-500\">\r\n        <Col md={3} className=\"text-center\">\r\n          <h2>\r\n            <i className=\"fa-solid fa-circle-exclamation text-danger\"></i>\r\n          </h2>\r\n          <div>Page not found</div>\r\n          <Link to=\"/\">\r\n            <Button className=\"btn-dark px-3 mt-2\">Home</Button>\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import { useEffect } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Footer from \"./components/Footer\";\r\nimport Header from \"./components/Header\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport ProductDetails from \"./screens/ProductDetails\";\r\nimport CartScreen from \"./screens/CartScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\nimport ShippingScreen from \"./screens/ShippingScreen\";\r\nimport PaymentScreen from \"./screens/PaymentScreen\";\r\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\r\nimport OrderPayScreen from \"./screens/OrderPayScreen\";\r\nimport ShowOrders from \"./screens/ShowOrders\";\r\nimport Dashboard from \"./admin_screens/Dashboard\";\r\nimport ProductList from \"./admin_screens/ProductList\";\r\nimport NewProduct from \"./admin_screens/NewProduct\";\r\nimport UpdateProduct from \"./admin_screens/UpdateProduct\";\r\nimport UsersList from \"./admin_screens/UsersList\";\r\nimport ProductReviews from \"./admin_screens/ProductReviews\";\r\nimport OrderList from \"./admin_screens/OrderList\";\r\nimport ProcessOrder from \"./admin_screens/ProcessOrder\";\r\nimport UpdateUser from \"./admin_screens/UpdateUser\";\r\nimport ProtectedRoute from \"./components/shared/ProtectedRoute\";\r\nimport { AdminRoute } from \"./components/shared/ProtectedRoute\";\r\nimport UpdateProfile from \"./screens/UpdateProfile\";\r\nimport Success from \"./screens/Success\";\r\nimport OrderDetailsScreen from \"./screens/OrderDetailsScreen\";\r\nimport store from \"./store\";\r\nimport { getUserDetails } from \"./actions/userAction\";\r\nimport About from \"./components/About\";\r\nimport Contact from \"./components/Contact\";\r\nimport NotFound from \"./components/NotFound\";\r\nfunction App() {\r\n  useEffect(() => {\r\n    store.dispatch(getUserDetails(\"profile\"));\r\n  }, []);\r\n  //stop to inspect website\r\n  // window.addEventListener(\"contextmenu\", (e) => e.preventDefault());\r\n  return (\r\n    <BrowserRouter>\r\n      <Header />\r\n\r\n      <main className=\"my-3\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={HomeScreen} />\r\n\r\n          <Route exact path=\"/product/:id\" component={ProductDetails} />\r\n\r\n          <Route exact path=\"/cart\" component={CartScreen} />\r\n\r\n          <Route exact path=\"/login\" component={LoginScreen} />\r\n\r\n          <Route exact path=\"/register\" component={RegisterScreen} />\r\n\r\n          <Route exact path=\"/about\" component={About} />\r\n\r\n          <Route exact path=\"/contact\" component={Contact} />\r\n\r\n          <ProtectedRoute exact path=\"/profile\" component={ProfileScreen} />\r\n\r\n          <ProtectedRoute\r\n            exact\r\n            path=\"/profile/update\"\r\n            component={UpdateProfile}\r\n          />\r\n\r\n          <ProtectedRoute exact path=\"/payment\" component={PaymentScreen} />\r\n\r\n          <ProtectedRoute exact path=\"/shipping\" component={ShippingScreen} />\r\n\r\n          <ProtectedRoute\r\n            exact\r\n            path=\"/placeorder\"\r\n            component={PlaceOrderScreen}\r\n          />\r\n\r\n          <ProtectedRoute exact path=\"/success\" component={Success} />\r\n\r\n          <ProtectedRoute exact path=\"/myorders\" component={ShowOrders} />\r\n\r\n          <ProtectedRoute exact path=\"/order/pay\" component={OrderPayScreen} />\r\n\r\n          <ProtectedRoute\r\n            exact\r\n            path=\"/order/:id\"\r\n            component={OrderDetailsScreen}\r\n          />\r\n\r\n          {/*Admin route*/}\r\n\r\n          <AdminRoute exact path=\"/admin/dashboard\" component={Dashboard} />\r\n\r\n          <AdminRoute exact path=\"/admin/products\" component={ProductList} />\r\n\r\n          <AdminRoute exact path=\"/admin/newproduct\" component={NewProduct} />\r\n\r\n          <AdminRoute\r\n            exact\r\n            path=\"/admin/product/:id\"\r\n            component={UpdateProduct}\r\n          />\r\n\r\n          <AdminRoute exact path=\"/admin/users\" component={UsersList} />\r\n\r\n          <AdminRoute exact path=\"/admin/orders\" component={OrderList} />\r\n\r\n          <AdminRoute exact path=\"/admin/order/:id\" component={ProcessOrder} />\r\n\r\n          <AdminRoute exact path=\"/admin/user/:id\" component={UpdateUser} />\r\n\r\n          <AdminRoute exact path=\"/admin/reviews\" component={ProductReviews} />\r\n\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </main>\r\n      <Footer />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles/Misc.css\";\nimport \"./styles/Form.css\";\nimport \"./styles/Utility.css\";\nimport \"./styles/Dashboard.css\";\nimport \"./styles/Review.css\";\nimport \"./styles/LinkBtn.css\";\n\nimport App from \"./App\";\n\nconst options = {\n  position: positions.BOTTOM_CENTER,\n  timeout: 5000,\n  offset: \"30px\",\n  transition: transitions.SCALE,\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <AlertProvider template={AlertTemplate} {...options}>\n      <App />\n    </AlertProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}